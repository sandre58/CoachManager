//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using My.CoachManager.Application.Dtos.Category;
using My.CoachManager.Application.Dtos.Person;

namespace My.CoachManager.Presentation.ServiceAgent.PersonServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PersonServiceReference.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPlayerDetails", ReplyAction="http://tempuri.org/IPersonService/GetPlayerDetailsResponse")]
        PlayerDetailsDto GetPlayerDetails(int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPlayerDetails", ReplyAction="http://tempuri.org/IPersonService/GetPlayerDetailsResponse")]
        System.Threading.Tasks.Task<PlayerDetailsDto> GetPlayerDetailsAsync(int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPlayer", ReplyAction="http://tempuri.org/IPersonService/GetPlayerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PlayerDetailsDto))]
        PlayerDto GetPlayer(int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPlayer", ReplyAction="http://tempuri.org/IPersonService/GetPlayerResponse")]
        System.Threading.Tasks.Task<PlayerDto> GetPlayerAsync(int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/CreateOrUpdate", ReplyAction="http://tempuri.org/IPersonService/CreateOrUpdateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PlayerDetailsDto))]
        PlayerDto CreateOrUpdate(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/CreateOrUpdate", ReplyAction="http://tempuri.org/IPersonService/CreateOrUpdateResponse")]
        System.Threading.Tasks.Task<PlayerDto> CreateOrUpdateAsync(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Remove", ReplyAction="http://tempuri.org/IPersonService/RemoveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PlayerDetailsDto))]
        void Remove(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Remove", ReplyAction="http://tempuri.org/IPersonService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetCategoryFromBirthdate", ReplyAction="http://tempuri.org/IPersonService/GetCategoryFromBirthdateResponse")]
        CategoryDto GetCategoryFromBirthdate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetCategoryFromBirthdate", ReplyAction="http://tempuri.org/IPersonService/GetCategoryFromBirthdateResponse")]
        System.Threading.Tasks.Task<CategoryDto> GetCategoryFromBirthdateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetCountries", ReplyAction="http://tempuri.org/IPersonService/GetCountriesResponse")]
        CountryDto[] GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetCountries", ReplyAction="http://tempuri.org/IPersonService/GetCountriesResponse")]
        System.Threading.Tasks.Task<CountryDto[]> GetCountriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : My.CoachManager.Presentation.ServiceAgent.PersonServiceReference.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<My.CoachManager.Presentation.ServiceAgent.PersonServiceReference.IPersonService>, My.CoachManager.Presentation.ServiceAgent.PersonServiceReference.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PlayerDetailsDto GetPlayerDetails(int playerId) {
            return base.Channel.GetPlayerDetails(playerId);
        }
        
        public System.Threading.Tasks.Task<PlayerDetailsDto> GetPlayerDetailsAsync(int playerId) {
            return base.Channel.GetPlayerDetailsAsync(playerId);
        }
        
        public PlayerDto GetPlayer(int playerId) {
            return base.Channel.GetPlayer(playerId);
        }
        
        public System.Threading.Tasks.Task<PlayerDto> GetPlayerAsync(int playerId) {
            return base.Channel.GetPlayerAsync(playerId);
        }
        
        public PlayerDto CreateOrUpdate(PlayerDto dto) {
            return base.Channel.CreateOrUpdate(dto);
        }
        
        public System.Threading.Tasks.Task<PlayerDto> CreateOrUpdateAsync(PlayerDto dto) {
            return base.Channel.CreateOrUpdateAsync(dto);
        }
        
        public void Remove(PlayerDto dto) {
            base.Channel.Remove(dto);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(PlayerDto dto) {
            return base.Channel.RemoveAsync(dto);
        }
        
        public CategoryDto GetCategoryFromBirthdate(System.DateTime date) {
            return base.Channel.GetCategoryFromBirthdate(date);
        }
        
        public System.Threading.Tasks.Task<CategoryDto> GetCategoryFromBirthdateAsync(System.DateTime date) {
            return base.Channel.GetCategoryFromBirthdateAsync(date);
        }
        
        public CountryDto[] GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<CountryDto[]> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
    }
}
