//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryServiceReference.ICategoryService")]
    public interface ICategoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetCategories", ReplyAction="http://tempuri.org/ICategoryService/GetCategoriesResponse")]
        My.CoachManager.Application.Dtos.CategoryDto[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetCategories", ReplyAction="http://tempuri.org/ICategoryService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.CategoryDto[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetCategoryById", ReplyAction="http://tempuri.org/ICategoryService/GetCategoryByIdResponse")]
        My.CoachManager.Application.Dtos.CategoryDto GetCategoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetCategoryById", ReplyAction="http://tempuri.org/ICategoryService/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.CategoryDto> GetCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/SaveCategory", ReplyAction="http://tempuri.org/ICategoryService/SaveCategoryResponse")]
        int SaveCategory(My.CoachManager.Application.Dtos.CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/SaveCategory", ReplyAction="http://tempuri.org/ICategoryService/SaveCategoryResponse")]
        System.Threading.Tasks.Task<int> SaveCategoryAsync(My.CoachManager.Application.Dtos.CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/RemoveCategory", ReplyAction="http://tempuri.org/ICategoryService/RemoveCategoryResponse")]
        void RemoveCategory(My.CoachManager.Application.Dtos.CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/RemoveCategory", ReplyAction="http://tempuri.org/ICategoryService/RemoveCategoryResponse")]
        System.Threading.Tasks.Task RemoveCategoryAsync(My.CoachManager.Application.Dtos.CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/UpdateOrders", ReplyAction="http://tempuri.org/ICategoryService/UpdateOrdersResponse")]
        void UpdateOrders(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/UpdateOrders", ReplyAction="http://tempuri.org/ICategoryService/UpdateOrdersResponse")]
        System.Threading.Tasks.Task UpdateOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryServiceChannel : My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference.ICategoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryServiceClient : System.ServiceModel.ClientBase<My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference.ICategoryService>, My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference.ICategoryService {
        
        public CategoryServiceClient() {
        }
        
        public CategoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public My.CoachManager.Application.Dtos.CategoryDto[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.CategoryDto[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public My.CoachManager.Application.Dtos.CategoryDto GetCategoryById(int id) {
            return base.Channel.GetCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.CategoryDto> GetCategoryByIdAsync(int id) {
            return base.Channel.GetCategoryByIdAsync(id);
        }
        
        public int SaveCategory(My.CoachManager.Application.Dtos.CategoryDto playerDto) {
            return base.Channel.SaveCategory(playerDto);
        }
        
        public System.Threading.Tasks.Task<int> SaveCategoryAsync(My.CoachManager.Application.Dtos.CategoryDto playerDto) {
            return base.Channel.SaveCategoryAsync(playerDto);
        }
        
        public void RemoveCategory(My.CoachManager.Application.Dtos.CategoryDto playerDto) {
            base.Channel.RemoveCategory(playerDto);
        }
        
        public System.Threading.Tasks.Task RemoveCategoryAsync(My.CoachManager.Application.Dtos.CategoryDto playerDto) {
            return base.Channel.RemoveCategoryAsync(playerDto);
        }
        
        public void UpdateOrders(System.Collections.Generic.Dictionary<int, int> entities) {
            base.Channel.UpdateOrders(entities);
        }
        
        public System.Threading.Tasks.Task UpdateOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities) {
            return base.Channel.UpdateOrdersAsync(entities);
        }
    }
}
