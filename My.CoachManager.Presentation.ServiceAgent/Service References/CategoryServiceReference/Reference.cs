//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using My.CoachManager.Application.Dtos.Categories;

namespace My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryServiceReference.ICategoryService")]
    public interface ICategoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetList", ReplyAction="http://tempuri.org/ICategoryService/GetListResponse")]
        CategoryDto[] GetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetList", ReplyAction="http://tempuri.org/ICategoryService/GetListResponse")]
        System.Threading.Tasks.Task<CategoryDto[]> GetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetLabels", ReplyAction="http://tempuri.org/ICategoryService/GetLabelsResponse")]
        CategoryDto[] GetLabels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetLabels", ReplyAction="http://tempuri.org/ICategoryService/GetLabelsResponse")]
        System.Threading.Tasks.Task<CategoryDto[]> GetLabelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetById", ReplyAction="http://tempuri.org/ICategoryService/GetByIdResponse")]
        CategoryDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetById", ReplyAction="http://tempuri.org/ICategoryService/GetByIdResponse")]
        System.Threading.Tasks.Task<CategoryDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/CreateOrUpdate", ReplyAction="http://tempuri.org/ICategoryService/CreateOrUpdateResponse")]
        CategoryDto CreateOrUpdate(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/CreateOrUpdate", ReplyAction="http://tempuri.org/ICategoryService/CreateOrUpdateResponse")]
        System.Threading.Tasks.Task<CategoryDto> CreateOrUpdateAsync(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/Remove", ReplyAction="http://tempuri.org/ICategoryService/RemoveResponse")]
        void Remove(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/Remove", ReplyAction="http://tempuri.org/ICategoryService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/UpdateOrders", ReplyAction="http://tempuri.org/ICategoryService/UpdateOrdersResponse")]
        void UpdateOrders(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/UpdateOrders", ReplyAction="http://tempuri.org/ICategoryService/UpdateOrdersResponse")]
        System.Threading.Tasks.Task UpdateOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryServiceChannel : My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference.ICategoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryServiceClient : System.ServiceModel.ClientBase<My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference.ICategoryService>, My.CoachManager.Presentation.ServiceAgent.CategoryServiceReference.ICategoryService {
        
        public CategoryServiceClient() {
        }
        
        public CategoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CategoryDto[] GetList() {
            return base.Channel.GetList();
        }
        
        public System.Threading.Tasks.Task<CategoryDto[]> GetListAsync() {
            return base.Channel.GetListAsync();
        }
        
        public CategoryDto[] GetLabels() {
            return base.Channel.GetLabels();
        }
        
        public System.Threading.Tasks.Task<CategoryDto[]> GetLabelsAsync() {
            return base.Channel.GetLabelsAsync();
        }
        
        public CategoryDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<CategoryDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public CategoryDto CreateOrUpdate(CategoryDto playerDto) {
            return base.Channel.CreateOrUpdate(playerDto);
        }
        
        public System.Threading.Tasks.Task<CategoryDto> CreateOrUpdateAsync(CategoryDto playerDto) {
            return base.Channel.CreateOrUpdateAsync(playerDto);
        }
        
        public void Remove(CategoryDto playerDto) {
            base.Channel.Remove(playerDto);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(CategoryDto playerDto) {
            return base.Channel.RemoveAsync(playerDto);
        }
        
        public void UpdateOrders(System.Collections.Generic.Dictionary<int, int> entities) {
            base.Channel.UpdateOrders(entities);
        }
        
        public System.Threading.Tasks.Task UpdateOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities) {
            return base.Channel.UpdateOrdersAsync(entities);
        }
    }
}
