//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.CoachManager.Presentation.ServiceAgent.RosterServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RosterServiceReference.IRosterService")]
    public interface IRosterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRosterService/GetSquads", ReplyAction="http://tempuri.org/IRosterService/GetSquadsResponse")]
        My.CoachManager.Application.Dtos.Rosters.SquadDto[] GetSquads(int rosterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRosterService/GetSquads", ReplyAction="http://tempuri.org/IRosterService/GetSquadsResponse")]
        System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.Rosters.SquadDto[]> GetSquadsAsync(int rosterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRosterService/GetPlayers", ReplyAction="http://tempuri.org/IRosterService/GetPlayersResponse")]
        My.CoachManager.Application.Dtos.Rosters.PlayerDetailDto[] GetPlayers(int rosterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRosterService/GetPlayers", ReplyAction="http://tempuri.org/IRosterService/GetPlayersResponse")]
        System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.Rosters.PlayerDetailDto[]> GetPlayersAsync(int rosterId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRosterServiceChannel : My.CoachManager.Presentation.ServiceAgent.RosterServiceReference.IRosterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RosterServiceClient : System.ServiceModel.ClientBase<My.CoachManager.Presentation.ServiceAgent.RosterServiceReference.IRosterService>, My.CoachManager.Presentation.ServiceAgent.RosterServiceReference.IRosterService {
        
        public RosterServiceClient() {
        }
        
        public RosterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RosterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RosterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RosterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public My.CoachManager.Application.Dtos.Rosters.SquadDto[] GetSquads(int rosterId) {
            return base.Channel.GetSquads(rosterId);
        }
        
        public System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.Rosters.SquadDto[]> GetSquadsAsync(int rosterId) {
            return base.Channel.GetSquadsAsync(rosterId);
        }
        
        public My.CoachManager.Application.Dtos.Rosters.PlayerDetailDto[] GetPlayers(int rosterId) {
            return base.Channel.GetPlayers(rosterId);
        }
        
        public System.Threading.Tasks.Task<My.CoachManager.Application.Dtos.Rosters.PlayerDetailDto[]> GetPlayersAsync(int rosterId) {
            return base.Channel.GetPlayersAsync(rosterId);
        }
    }
}
