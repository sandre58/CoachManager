//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using My.CoachManager.Application.Dtos.Administration;
using My.CoachManager.Application.Dtos.Persons;

namespace My.CoachManager.Presentation.ServiceAgent.AdminServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminServiceReference.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoriesList", ReplyAction="http://tempuri.org/IAdminService/GetCategoriesListResponse")]
        System.Collections.Generic.List<CategoryDto> GetCategoriesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoriesList", ReplyAction="http://tempuri.org/IAdminService/GetCategoriesListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CategoryDto>> GetCategoriesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoryById", ReplyAction="http://tempuri.org/IAdminService/GetCategoryByIdResponse")]
        CategoryDto GetCategoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoryById", ReplyAction="http://tempuri.org/IAdminService/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<CategoryDto> GetCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdateCategory", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdateCategoryResponse")]
        CategoryDto CreateOrUpdateCategory(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdateCategory", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdateCategoryResponse")]
        System.Threading.Tasks.Task<CategoryDto> CreateOrUpdateCategoryAsync(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemoveCategory", ReplyAction="http://tempuri.org/IAdminService/RemoveCategoryResponse")]
        void RemoveCategory(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemoveCategory", ReplyAction="http://tempuri.org/IAdminService/RemoveCategoryResponse")]
        System.Threading.Tasks.Task RemoveCategoryAsync(CategoryDto playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateCategoriesOrders", ReplyAction="http://tempuri.org/IAdminService/UpdateCategoriesOrdersResponse")]
        void UpdateCategoriesOrders(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateCategoriesOrders", ReplyAction="http://tempuri.org/IAdminService/UpdateCategoriesOrdersResponse")]
        System.Threading.Tasks.Task UpdateCategoriesOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSeasonsList", ReplyAction="http://tempuri.org/IAdminService/GetSeasonsListResponse")]
        System.Collections.Generic.List<SeasonDto> GetSeasonsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSeasonsList", ReplyAction="http://tempuri.org/IAdminService/GetSeasonsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SeasonDto>> GetSeasonsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSeasonById", ReplyAction="http://tempuri.org/IAdminService/GetSeasonByIdResponse")]
        SeasonDto GetSeasonById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetSeasonById", ReplyAction="http://tempuri.org/IAdminService/GetSeasonByIdResponse")]
        System.Threading.Tasks.Task<SeasonDto> GetSeasonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdateSeason", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdateSeasonResponse")]
        SeasonDto CreateOrUpdateSeason(SeasonDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdateSeason", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdateSeasonResponse")]
        System.Threading.Tasks.Task<SeasonDto> CreateOrUpdateSeasonAsync(SeasonDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemoveSeason", ReplyAction="http://tempuri.org/IAdminService/RemoveSeasonResponse")]
        void RemoveSeason(SeasonDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemoveSeason", ReplyAction="http://tempuri.org/IAdminService/RemoveSeasonResponse")]
        System.Threading.Tasks.Task RemoveSeasonAsync(SeasonDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateSeasonsOrders", ReplyAction="http://tempuri.org/IAdminService/UpdateSeasonsOrdersResponse")]
        void UpdateSeasonsOrders(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateSeasonsOrders", ReplyAction="http://tempuri.org/IAdminService/UpdateSeasonsOrdersResponse")]
        System.Threading.Tasks.Task UpdateSeasonsOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPositionsList", ReplyAction="http://tempuri.org/IAdminService/GetPositionsListResponse")]
        System.Collections.Generic.List<PositionDto> GetPositionsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPositionsList", ReplyAction="http://tempuri.org/IAdminService/GetPositionsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<PositionDto>> GetPositionsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPositionById", ReplyAction="http://tempuri.org/IAdminService/GetPositionByIdResponse")]
        PositionDto GetPositionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPositionById", ReplyAction="http://tempuri.org/IAdminService/GetPositionByIdResponse")]
        System.Threading.Tasks.Task<PositionDto> GetPositionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdatePosition", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdatePositionResponse")]
        PositionDto CreateOrUpdatePosition(PositionDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdatePosition", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdatePositionResponse")]
        System.Threading.Tasks.Task<PositionDto> CreateOrUpdatePositionAsync(PositionDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemovePosition", ReplyAction="http://tempuri.org/IAdminService/RemovePositionResponse")]
        void RemovePosition(PositionDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemovePosition", ReplyAction="http://tempuri.org/IAdminService/RemovePositionResponse")]
        System.Threading.Tasks.Task RemovePositionAsync(PositionDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdatePositionsOrders", ReplyAction="http://tempuri.org/IAdminService/UpdatePositionsOrdersResponse")]
        void UpdatePositionsOrders(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdatePositionsOrders", ReplyAction="http://tempuri.org/IAdminService/UpdatePositionsOrdersResponse")]
        System.Threading.Tasks.Task UpdatePositionsOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPlayersList", ReplyAction="http://tempuri.org/IAdminService/GetPlayersListResponse")]
        System.Collections.Generic.List<PlayerDto> GetPlayersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPlayersList", ReplyAction="http://tempuri.org/IAdminService/GetPlayersListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<PlayerDto>> GetPlayersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPlayerById", ReplyAction="http://tempuri.org/IAdminService/GetPlayerByIdResponse")]
        PlayerDto GetPlayerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPlayerById", ReplyAction="http://tempuri.org/IAdminService/GetPlayerByIdResponse")]
        System.Threading.Tasks.Task<PlayerDto> GetPlayerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdatePlayer", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdatePlayerResponse")]
        PlayerDto CreateOrUpdatePlayer(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateOrUpdatePlayer", ReplyAction="http://tempuri.org/IAdminService/CreateOrUpdatePlayerResponse")]
        System.Threading.Tasks.Task<PlayerDto> CreateOrUpdatePlayerAsync(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemovePlayer", ReplyAction="http://tempuri.org/IAdminService/RemovePlayerResponse")]
        void RemovePlayer(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RemovePlayer", ReplyAction="http://tempuri.org/IAdminService/RemovePlayerResponse")]
        System.Threading.Tasks.Task RemovePlayerAsync(PlayerDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCountriesForPlayer", ReplyAction="http://tempuri.org/IAdminService/GetCountriesForPlayerResponse")]
        System.Collections.Generic.List<CountryDto> GetCountriesForPlayer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCountriesForPlayer", ReplyAction="http://tempuri.org/IAdminService/GetCountriesForPlayerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CountryDto>> GetCountriesForPlayerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCitiesForPlayer", ReplyAction="http://tempuri.org/IAdminService/GetCitiesForPlayerResponse")]
        System.Collections.Generic.List<CityDto> GetCitiesForPlayer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCitiesForPlayer", ReplyAction="http://tempuri.org/IAdminService/GetCitiesForPlayerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CityDto>> GetCitiesForPlayerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoriesForPlayer", ReplyAction="http://tempuri.org/IAdminService/GetCategoriesForPlayerResponse")]
        System.Collections.Generic.List<CategoryDto> GetCategoriesForPlayer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoriesForPlayer", ReplyAction="http://tempuri.org/IAdminService/GetCategoriesForPlayerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CategoryDto>> GetCategoriesForPlayerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoryFromBirthdate", ReplyAction="http://tempuri.org/IAdminService/GetCategoryFromBirthdateResponse")]
        CategoryDto GetCategoryFromBirthdate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoryFromBirthdate", ReplyAction="http://tempuri.org/IAdminService/GetCategoryFromBirthdateResponse")]
        System.Threading.Tasks.Task<CategoryDto> GetCategoryFromBirthdateAsync(System.DateTime date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : My.CoachManager.Presentation.ServiceAgent.AdminServiceReference.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<My.CoachManager.Presentation.ServiceAgent.AdminServiceReference.IAdminService>, My.CoachManager.Presentation.ServiceAgent.AdminServiceReference.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<CategoryDto> GetCategoriesList() {
            return base.Channel.GetCategoriesList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CategoryDto>> GetCategoriesListAsync() {
            return base.Channel.GetCategoriesListAsync();
        }
        
        public CategoryDto GetCategoryById(int id) {
            return base.Channel.GetCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<CategoryDto> GetCategoryByIdAsync(int id) {
            return base.Channel.GetCategoryByIdAsync(id);
        }
        
        public CategoryDto CreateOrUpdateCategory(CategoryDto playerDto) {
            return base.Channel.CreateOrUpdateCategory(playerDto);
        }
        
        public System.Threading.Tasks.Task<CategoryDto> CreateOrUpdateCategoryAsync(CategoryDto playerDto) {
            return base.Channel.CreateOrUpdateCategoryAsync(playerDto);
        }
        
        public void RemoveCategory(CategoryDto playerDto) {
            base.Channel.RemoveCategory(playerDto);
        }
        
        public System.Threading.Tasks.Task RemoveCategoryAsync(CategoryDto playerDto) {
            return base.Channel.RemoveCategoryAsync(playerDto);
        }
        
        public void UpdateCategoriesOrders(System.Collections.Generic.Dictionary<int, int> entities) {
            base.Channel.UpdateCategoriesOrders(entities);
        }
        
        public System.Threading.Tasks.Task UpdateCategoriesOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities) {
            return base.Channel.UpdateCategoriesOrdersAsync(entities);
        }
        
        public System.Collections.Generic.List<SeasonDto> GetSeasonsList() {
            return base.Channel.GetSeasonsList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SeasonDto>> GetSeasonsListAsync() {
            return base.Channel.GetSeasonsListAsync();
        }
        
        public SeasonDto GetSeasonById(int id) {
            return base.Channel.GetSeasonById(id);
        }
        
        public System.Threading.Tasks.Task<SeasonDto> GetSeasonByIdAsync(int id) {
            return base.Channel.GetSeasonByIdAsync(id);
        }
        
        public SeasonDto CreateOrUpdateSeason(SeasonDto dto) {
            return base.Channel.CreateOrUpdateSeason(dto);
        }
        
        public System.Threading.Tasks.Task<SeasonDto> CreateOrUpdateSeasonAsync(SeasonDto dto) {
            return base.Channel.CreateOrUpdateSeasonAsync(dto);
        }
        
        public void RemoveSeason(SeasonDto dto) {
            base.Channel.RemoveSeason(dto);
        }
        
        public System.Threading.Tasks.Task RemoveSeasonAsync(SeasonDto dto) {
            return base.Channel.RemoveSeasonAsync(dto);
        }
        
        public void UpdateSeasonsOrders(System.Collections.Generic.Dictionary<int, int> entities) {
            base.Channel.UpdateSeasonsOrders(entities);
        }
        
        public System.Threading.Tasks.Task UpdateSeasonsOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities) {
            return base.Channel.UpdateSeasonsOrdersAsync(entities);
        }
        
        public System.Collections.Generic.List<PositionDto> GetPositionsList() {
            return base.Channel.GetPositionsList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<PositionDto>> GetPositionsListAsync() {
            return base.Channel.GetPositionsListAsync();
        }
        
        public PositionDto GetPositionById(int id) {
            return base.Channel.GetPositionById(id);
        }
        
        public System.Threading.Tasks.Task<PositionDto> GetPositionByIdAsync(int id) {
            return base.Channel.GetPositionByIdAsync(id);
        }
        
        public PositionDto CreateOrUpdatePosition(PositionDto dto) {
            return base.Channel.CreateOrUpdatePosition(dto);
        }
        
        public System.Threading.Tasks.Task<PositionDto> CreateOrUpdatePositionAsync(PositionDto dto) {
            return base.Channel.CreateOrUpdatePositionAsync(dto);
        }
        
        public void RemovePosition(PositionDto dto) {
            base.Channel.RemovePosition(dto);
        }
        
        public System.Threading.Tasks.Task RemovePositionAsync(PositionDto dto) {
            return base.Channel.RemovePositionAsync(dto);
        }
        
        public void UpdatePositionsOrders(System.Collections.Generic.Dictionary<int, int> entities) {
            base.Channel.UpdatePositionsOrders(entities);
        }
        
        public System.Threading.Tasks.Task UpdatePositionsOrdersAsync(System.Collections.Generic.Dictionary<int, int> entities) {
            return base.Channel.UpdatePositionsOrdersAsync(entities);
        }
        
        public System.Collections.Generic.List<PlayerDto> GetPlayersList() {
            return base.Channel.GetPlayersList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<PlayerDto>> GetPlayersListAsync() {
            return base.Channel.GetPlayersListAsync();
        }
        
        public PlayerDto GetPlayerById(int id) {
            return base.Channel.GetPlayerById(id);
        }
        
        public System.Threading.Tasks.Task<PlayerDto> GetPlayerByIdAsync(int id) {
            return base.Channel.GetPlayerByIdAsync(id);
        }
        
        public PlayerDto CreateOrUpdatePlayer(PlayerDto dto) {
            return base.Channel.CreateOrUpdatePlayer(dto);
        }
        
        public System.Threading.Tasks.Task<PlayerDto> CreateOrUpdatePlayerAsync(PlayerDto dto) {
            return base.Channel.CreateOrUpdatePlayerAsync(dto);
        }
        
        public void RemovePlayer(PlayerDto dto) {
            base.Channel.RemovePlayer(dto);
        }
        
        public System.Threading.Tasks.Task RemovePlayerAsync(PlayerDto dto) {
            return base.Channel.RemovePlayerAsync(dto);
        }
        
        public System.Collections.Generic.List<CountryDto> GetCountriesForPlayer() {
            return base.Channel.GetCountriesForPlayer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CountryDto>> GetCountriesForPlayerAsync() {
            return base.Channel.GetCountriesForPlayerAsync();
        }
        
        public System.Collections.Generic.List<CityDto> GetCitiesForPlayer() {
            return base.Channel.GetCitiesForPlayer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CityDto>> GetCitiesForPlayerAsync() {
            return base.Channel.GetCitiesForPlayerAsync();
        }
        
        public System.Collections.Generic.List<CategoryDto> GetCategoriesForPlayer() {
            return base.Channel.GetCategoriesForPlayer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CategoryDto>> GetCategoriesForPlayerAsync() {
            return base.Channel.GetCategoriesForPlayerAsync();
        }
        
        public CategoryDto GetCategoryFromBirthdate(System.DateTime date) {
            return base.Channel.GetCategoryFromBirthdate(date);
        }
        
        public System.Threading.Tasks.Task<CategoryDto> GetCategoryFromBirthdateAsync(System.DateTime date) {
            return base.Channel.GetCategoryFromBirthdateAsync(date);
        }
    }
}
