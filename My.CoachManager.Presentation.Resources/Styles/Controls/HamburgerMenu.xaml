<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Controls;assembly=My.CoachManager.Presentation.Controls"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Controls.Parameters;assembly=My.CoachManager.Presentation.Controls"
                    xmlns:menuItems="clr-namespace:My.CoachManager.Presentation.Controls.HamburgerMenus.MenuItems;assembly=My.CoachManager.Presentation.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="ListBox.xaml" />
        <ResourceDictionary Source="ScrollBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  This is the template for the menu items.  -->
    <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type menuItems:HamburgerMenuIconItem}">
        <Grid Height="48">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{Binding Icon}"
                            Focusable="False"
                            IsTabStop="False" />
            <TextBlock Grid.Column="1"
                       VerticalAlignment="Center"
                       FontSize="16"
                       Text="{Binding Label}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="HamburgerButtonStyle"
           BasedOn="{StaticResource IconButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="Transparent">
                        <Grid x:Name="PART_Background"
                              Background="{TemplateBinding Background}"
                              Opacity="0" />
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Opacity="0.75"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.3" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <QuinticEase x:Key="ScrollBarEaseInOut"
                 EasingMode="EaseInOut"
                 options:Freeze="true" />

    <Style x:Key="HamburgerScrollViewerStyle"
           BasedOn="{StaticResource {x:Type ScrollViewer}}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="leftColumn" Width="*" />
                            <ColumnDefinition x:Name="rightColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   HorizontalAlignment="Right"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Opacity="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="0"
                                   Grid.RowSpan="2"
                                   Grid.Column="0"
                                   VerticalAlignment="Bottom"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Opacity="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="parameters:ScrollViewerParameters.VerticalScrollBarOnLeftSide" Value="True">
                            <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_VerticalScrollBar" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="leftColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="rightColumn" Property="Width" Value="*" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ComputedVerticalScrollBarVisibility}" Value="Visible" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:SplitView}}, Path=IsPaneOpen}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:1"
                                                         EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                        <DoubleAnimation BeginTime="0:0:1"
                                                         EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HamburgerMenuItemFocusVisualTemplate">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="Black"
                   StrokeThickness="2"
                   UseLayoutRounding="True" />
    </ControlTemplate>

    <Style x:Key="HamburgerMenuItemStyle"
           BasedOn="{StaticResource {x:Type ListBoxItem}}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:HamburgerMenu}}, Path=ItemFocusVisualStyle, Mode=OneWay, FallbackValue={x:Null}}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Foreground, Mode=OneWay}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=OneWay, FallbackValue=true}" />
        <Setter Property="IsTabStop" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:HamburgerMenu}}, Path=IsTabStop, Mode=OneWay, FallbackValue=True}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Rectangle x:Name="SelectionIndicator"
                                           Width="50"
                                           Height="50"
                                           Fill="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           Opacity="0.0" />
                            </Grid>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusForeground), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.FocusBackground), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.FocusBorderBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.PressedBackground), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.PressedBorderBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.PressedBackground), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.PressedBorderBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.MouseOverBackground), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(parameters:ControlParameters.MouseOverBorderBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="HamburgerMenuListStyle"
           BasedOn="{StaticResource {x:Type ListBox}}"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      parameters:ScrollViewerParameters.VerticalScrollBarOnLeftSide="{TemplateBinding parameters:ScrollViewerParameters.VerticalScrollBarOnLeftSide}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Style="{StaticResource HamburgerScrollViewerStyle}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="False">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False" />
    </Style>

    <ControlTemplate x:Key="HamburgerMenuTemplate" TargetType="{x:Type controls:HamburgerMenu}">
        <Grid>
            <controls:SplitView x:Name="MainSplitView"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                DisplayMode="{TemplateBinding DisplayMode}"
                                IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsTabStop="False"
                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                PaneBackground="{TemplateBinding PaneBackground}"
                                PaneForeground="{TemplateBinding PaneForeground}"
                                PanePlacement="{TemplateBinding PanePlacement}">
                <controls:SplitView.Pane>
                    <Grid x:Name="PaneGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel x:Name="PaneHeader"
                                   Grid.Row="0"
                                   Height="{TemplateBinding HamburgerHeight}"
                                   Margin="0 0 0 8"
                                   LastChildFill="True">
                            <Grid x:Name="PaneHeaderGap"
                                  Width="{TemplateBinding HamburgerWidth}"
                                  DockPanel.Dock="Left" />
                            <ContentControl x:Name="PaneHeaderContent"
                                            ContentTemplate="{TemplateBinding HamburgerMenuHeaderTemplate}"
                                            IsTabStop="False" />
                        </DockPanel>
                        <ListBox Name="ButtonsListView"
                                 Grid.Row="1"
                                 Width="{TemplateBinding OpenPaneLength}"
                                 parameters:ScrollViewerParameters.VerticalScrollBarOnLeftSide="{TemplateBinding VerticalScrollBarOnLeftSide}"
                                 AutomationProperties.Name="Menu items"
                                 Foreground="{TemplateBinding PaneForeground}"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                 ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                 ItemsSource="{TemplateBinding ItemsSource}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}"
                                 SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem, Mode=TwoWay}"
                                 SelectionMode="Single"
                                 Style="{StaticResource HamburgerMenuListStyle}"
                                 TabIndex="1" />
                        <ListBox Name="OptionsListView"
                                 Grid.Row="2"
                                 Width="{TemplateBinding OpenPaneLength}"
                                 Margin="0 20 0 8"
                                 VerticalAlignment="Bottom"
                                 AutomationProperties.Name="Option items"
                                 Foreground="{TemplateBinding PaneForeground}"
                                 ItemContainerStyle="{TemplateBinding OptionsItemContainerStyle}"
                                 ItemTemplate="{TemplateBinding OptionsItemTemplate}"
                                 ItemTemplateSelector="{TemplateBinding OptionsItemTemplateSelector}"
                                 ItemsSource="{TemplateBinding OptionsItemsSource}"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsIndex, Mode=TwoWay}"
                                 SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsItem, Mode=TwoWay}"
                                 SelectionMode="Single"
                                 Style="{StaticResource HamburgerMenuListStyle}"
                                 TabIndex="2" />
                    </Grid>
                </controls:SplitView.Pane>
                <controls:TransitioningContentControl x:Name="ContentPart"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      AutomationProperties.Name="Content"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      RestartTransitionOnContentChange="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Transition="{TemplateBinding ContentTransition}" />
            </controls:SplitView>
            <Button x:Name="HamburgerButton"
                    Width="{TemplateBinding HamburgerWidth}"
                    Height="{TemplateBinding HamburgerHeight}"
                    Margin="0 0 0 8"
                    Padding="{TemplateBinding HamburgerMargin}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    AutomationProperties.Name="Main button"
                    ContentTemplate="{TemplateBinding HamburgerMenuTemplate}"
                    Foreground="{TemplateBinding PaneForeground}"
                    IsTabStop="{TemplateBinding IsTabStop}"
                    Style="{StaticResource HamburgerButtonStyle}"
                    TabIndex="0"
                    Visibility="{TemplateBinding HamburgerVisibility}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="PanePlacement" Value="Right">
                <Setter TargetName="HamburgerButton" Property="HorizontalAlignment" Value="Right" />
                <Setter TargetName="PaneHeaderGap" Property="DockPanel.Dock" Value="Right" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:HamburgerMenu}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HamburgerMenuTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!--  PackIconMaterial - Menu  -->
                    <!--<ContentControl Width="22"
                                    Height="22"
                                    Content="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"
                                    Style="{DynamicResource PathIconContentControlStyle}" />-->
                    <TextBlock Text="Coucouc" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuItemStyle}" />
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Local" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuItemStyle}" />
        <Setter Property="PaneBackground" Value="{DynamicResource DarkAccent}" />
        <Setter Property="PaneForeground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="Template" Value="{StaticResource HamburgerMenuTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
</ResourceDictionary>