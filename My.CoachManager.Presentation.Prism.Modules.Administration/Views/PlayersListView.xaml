<UserControl x:Class="My.CoachManager.Presentation.Prism.Modules.Administration.Views.PlayersListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:entities="clr-namespace:My.CoachManager.CrossCutting.Core.Resources.Entities;assembly=My.CoachManager.CrossCutting.Core"
             xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
             xmlns:enum="clr-namespace:My.CoachManager.CrossCutting.Core.Enums;assembly=My.CoachManager.CrossCutting.Core"
             xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls"
             xmlns:columns="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Datagrids.Columns;assembly=My.CoachManager.Presentation.Prism.Controls"
             xmlns:viewModels1="clr-namespace:My.CoachManager.Presentation.Prism.Modules.Administration.ViewModels"
             xmlns:models="clr-namespace:My.CoachManager.Presentation.Prism.Models;assembly=My.CoachManager.Presentation.Prism.Models"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:strings="clr-namespace:My.CoachManager.Presentation.Prism.Core.Resources;assembly=My.CoachManager.Presentation.Prism.Core"
             mc:Ignorable="d"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{d:DesignInstance Type=viewModels1:PlayersListViewModel}"
             d:DesignHeight="500" d:DesignWidth="800">

    <controls:WorkspaceView>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <DataGrid Grid.Row="1" x:Name="ListGrid"
                      ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}"
                      Style="{StaticResource ItemsDataGridStyle}"
                      FrozenColumnCount="2"
                      parameters:DataGridParameters.VisibleColumns="{Binding Parameters.DisplayedColumns}">
                <DataGrid.Columns>

                    <!-- Photo -->
                    <DataGridTemplateColumn AutomationProperties.Name="Photo" MinWidth="90" CanUserResize="False" CanUserSort="False" parameters:DataGridColumnParameters.CanUserHideColumn="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="models:PlayerModel">
                                <controls:ImageContent Style="{StaticResource RoundedImageStyle}" Width="45" Height="45" Image="{Binding Photo, Converter={StaticResource BytesToImageConverter}}" HorizontalAlignment="Center">
                                    <Grid>
                                        <controls:Icon x:Name="Icon" Content="{StaticResource MalePeopleGeometry}" Size="Custom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                    </Grid>
                                </controls:ImageContent>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Gender}" Value="{x:Static enum:GenderType.Female}">
                                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource FemalePeopleGeometry}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Name -->
                    <DataGridTemplateColumn AutomationProperties.Name="Name" Header="{x:Static entities:PersonResources.LastName}" SortMemberPath="LastName" MinWidth="140" parameters:DataGridColumnParameters.CanUserHideColumn="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="models:PlayerModel">
                                <StackPanel>
                                    <TextBlock Text="{Binding LastName, Converter={StaticResource ToUpperConverter}}" FontWeight="Bold" />
                                    <TextBlock Text="{Binding FirstName}" FontWeight="Bold" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Age -->
                    <columns:DataGridTextColumn AutomationProperties.Name="Age"
                                                Binding="{Binding Age, StringFormat={x:Static entities:PersonResources.AgeFormat}, TargetNullValue=''}"
                                                Header="{x:Static entities:PersonResources.Age}" SortMemberPath="Age" MinWidth="50" />

                    <!-- Birthdate -->
                    <DataGridTextColumn AutomationProperties.Name="Birthdate"
                                        Binding="{Binding Birthdate, StringFormat={}{0:dd/MM/yyyy}}"
                                        Header="{x:Static entities:PersonResources.Birthdate}" SortMemberPath="Birthdate" MinWidth="100" />

                    <!-- Category -->
                    <DataGridTextColumn AutomationProperties.Name="Category" Binding="{Binding Category.Label}" Header="{x:Static entities:PlayerResources.CategoryAbbr}" SortMemberPath="Category.Order" MinWidth="70" />

                    <!-- License Number -->
                    <DataGridTextColumn AutomationProperties.Name="License" Header="{x:Static entities:PersonResources.LicenseNumber}" Binding="{Binding LicenseNumber, Converter={StaticResource ToFormatConverter}, ConverterParameter=\{0:# ### ### ###\}}" MinWidth="110" />

                    <!-- Gender -->
                    <DataGridTemplateColumn AutomationProperties.Name="Gender" Header="{x:Static entities:PersonResources.Gender}" SortMemberPath="Gender" MinWidth="70">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="models:PlayerModel">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <controls:Icon Size="Custom" Height="25" Foreground="{DynamicResource Male}"  Content="{DynamicResource GenderMaleGeometry}"
                                               Visibility="{Binding Gender, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static enum:GenderType.Male}}" />
                                    <controls:Icon Size="Custom" Height="25" Foreground="{DynamicResource Female}"  Content="{DynamicResource GenderFemaleGeometry}"
                                               Visibility="{Binding Gender, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static enum:GenderType.Female}}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Country -->
                    <DataGridTemplateColumn AutomationProperties.Name="Country" Header="{x:Static entities:PersonResources.CountryAbbr}" SortMemberPath="Country.Label" MinWidth="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="models:PlayerModel">
                                <Grid>
                                    <Image Source="{Binding Country.FullPath}" Width="20" ToolTip="{Binding Country.Label}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Address -->
                    <DataGridTemplateColumn AutomationProperties.Name="Address" Header="{x:Static entities:PersonResources.Address}" SortMemberPath="City" MinWidth="200">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="models:PlayerModel">
                                <StackPanel>
                                    <TextBlock Text="{Binding Address}" />
                                    <StackPanel Orientation="Horizontal" Margin="{StaticResource DefaultHorizontalMargin}">
                                        <TextBlock Text="{Binding  PostalCode, StringFormat='{}{0} '}" Margin="0" />
                                        <TextBlock Text="{Binding  City, Converter={StaticResource ToUpperConverter}}" Margin="0" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Phone -->
                    <columns:DataGridHyperlinkColumn AutomationProperties.Name="Phone" Header="{x:Static entities:PersonResources.Phone}"
                                                 Binding="{Binding Phone, Converter={StaticResource ToFormatConverter}, ConverterParameter=\{0:00 00 00 00 00\}}"
                                                 MinWidth="130" />

                    <!-- Email -->
                    <columns:DataGridHyperlinkColumn AutomationProperties.Name="Email" Header="{x:Static entities:PersonResources.Email}"
                                                 Binding="{Binding Email}"
                                                 MinWidth="175" Width="*" />

                    <!-- Laterality -->
                    <DataGridTemplateColumn AutomationProperties.Name="Laterality" Header="{x:Static entities:PlayerResources.Laterality}" SortMemberPath="Laterality" MinWidth="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="models:PlayerModel">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding Laterality, Converter={StaticResource EnumToStringConverter}}">
                                    <controls:Icon x:Name="LeftFootIcon" Size="Custom" Height="35"  Content="{DynamicResource LeftFootGeometry}" Margin="{StaticResource DefaultHorizontalMargin}" Opacity="0.3" />
                                    <controls:Icon x:Name="RightFootIcon" Size="Custom" Height="35" Content="{DynamicResource RightFootGeometry}" Margin="{StaticResource DefaultHorizontalMargin}" Opacity="0.3" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Laterality}" Value="{x:Static enum:Laterality.LeftHander}">
                                        <Setter TargetName="LeftFootIcon" Property="Opacity" Value="1" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Laterality}" Value="{x:Static enum:Laterality.RightHander}">
                                        <Setter TargetName="RightFootIcon" Property="Opacity" Value="1" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Height -->
                    <columns:DataGridTextColumn AutomationProperties.Name="Height" Header="{x:Static entities:PlayerResources.Height}" SortMemberPath="Height" Binding="{Binding Height, Converter={StaticResource ToFormatConverter}, ConverterParameter=\{0\} cm}" MinWidth="80" />

                    <!-- Weight -->
                    <columns:DataGridTextColumn AutomationProperties.Name="Weight" Header="{x:Static entities:PlayerResources.Weight}" SortMemberPath="Weight" Binding="{Binding Weight, Converter={StaticResource ToFormatConverter}, ConverterParameter=\{0\} kg}" MinWidth="80" />

                    <!-- Size -->
                    <columns:DataGridTextColumn AutomationProperties.Name="Size" Header="{x:Static entities:PersonResources.Size}" Binding="{Binding Size}" MinWidth="80" />

                    <!-- Shoes Size -->
                    <columns:DataGridTextColumn AutomationProperties.Name="ShoesSize" Header="{x:Static entities:PlayerResources.ShoesSize}" Binding="{Binding ShoesSize}" MinWidth="80" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <controls:WorkspaceView.Commands>
            <controls:CommandButton DockPanel.Dock="Right" IconData="{StaticResource AddGeometry}" Content="{x:Static strings:ControlResources.Add}" Command="{Binding AddCommand}" />
            <controls:CommandButton DockPanel.Dock="Right" IconData="{StaticResource EditGeometry}" Content="{x:Static strings:ControlResources.Edit}" Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem}" />
            <controls:CommandButton DockPanel.Dock="Right" IconData="{StaticResource TrashGeometry}" Content="{x:Static strings:ControlResources.Remove}" Command="{Binding RemoveCommand}" CommandParameter="{Binding SelectedItem}" />
            <controls:CommandButton DockPanel.Dock="Right" IconData="{StaticResource RefreshGeometry}" Content="{x:Static strings:ControlResources.Refresh}" Command="{Binding RefreshCommand}" />
        </controls:WorkspaceView.Commands>
    </controls:WorkspaceView>
</UserControl>