<UserControl x:Class="My.CoachManager.Presentation.Modules.Training.Views.TrainingAttendanceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:viewModels="clr-namespace:My.CoachManager.Presentation.Modules.Training.ViewModels"
             xmlns:resources="clr-namespace:My.CoachManager.Presentation.Modules.Training.Resources"
             xmlns:controls="clr-namespace:My.CoachManager.Presentation.Controls;assembly=My.CoachManager.Presentation.Controls"
             mc:Ignorable="d"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{d:DesignInstance Type=viewModels:TrainingViewModel}"
             d:DesignHeight="500" d:DesignWidth="800">

    <Grid>

        <!-- No attendances -->
        <controls:CommandButton ButtonDiameter="300"
                                Header="{x:Static resources:TrainingResources.EditAttencance}" Content="{StaticResource EditBoxGeometry}"
                                FontSize="{StaticResource MediumHeaderFontSize}"
                                Command="{Binding EditAttendancesCommand}"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                Visibility="{Binding Item.Attendances, IsAsync=True, FallbackValue=Collapsed, Converter={StaticResource AnyToVisibilityConverter}, ConverterParameter=inverse}" />

        <!-- Attendances -->
        <Grid
                Visibility="{Binding Item.Attendances, IsAsync=True, FallbackValue=Collapsed, Converter={StaticResource AnyToVisibilityConverter}}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Unknown -->
            <controls:HeaderPanel Grid.Column="0"
                                      HeaderForeground="{DynamicResource Neutral}"
                                      Header="{Binding Item.Unknown.Count, IsAsync=True}"
                                  ContentStringFormat="{x:Static resources:TrainingResources.PresentsWithCount}"
                                      Icon="{StaticResource QuestionGeometry}"
                                      Visibility="{Binding Item.Unknown, IsAsync=True, FallbackValue=Hidden,  Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.Unknown, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>

            <!-- Presents -->
            <controls:HeaderPanel Grid.Column="1"
                                  HeaderForeground="{DynamicResource Positive}"
                                  Header="{Binding Item.Presents.Count, IsAsync=True}"
                                  HeaderStringFormat="{Binding Source={x:Static resources:TrainingResources.PresentsWithCount}, Converter={StaticResource ToUpperConverter}}"
                                  Icon="{StaticResource OkGeometry}"
                Visibility="{Binding Item.Presents, IsAsync=True, FallbackValue=Hidden,  Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.Presents, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>

            <!-- Absents -->
            <controls:HeaderPanel Grid.Column="2"
                                  Header="{Binding Item.Absents.Count, IsAsync=True}"
                                  HeaderStringFormat="{Binding Source={x:Static resources:TrainingResources.AbsentsWithCount}, Converter={StaticResource ToUpperConverter}}"
                                  HeaderForeground="{DynamicResource Negative}"
                Icon="{StaticResource CancelGeometry}"
                Visibility="{Binding Item.Absents, IsAsync=True, FallbackValue=Hidden, Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.Absents, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>

            <!-- Injured -->
            <controls:HeaderPanel Grid.Column="3"
                                  Header="{Binding Item.Injured.Count, IsAsync=True}"
                                  HeaderStringFormat="{Binding Source={x:Static resources:TrainingResources.InjuredWithCount}, Converter={StaticResource ToUpperConverter}}"
                                  HeaderForeground="{DynamicResource Warning}"
                Icon="{StaticResource AmbulanceGeometry}"
                Visibility="{Binding Item.Injured, IsAsync=True, FallbackValue=Hidden, Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.Injured, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>

            <!-- Resting -->
            <controls:HeaderPanel Grid.Column="4"
                                  Header="{Binding Item.Resting.Count, IsAsync=True}"
                                  HeaderStringFormat="{Binding Source={x:Static resources:TrainingResources.RestingWithCount}, Converter={StaticResource ToUpperConverter}}"
                                  HeaderForeground="{DynamicResource Information}"
                                      Icon="{StaticResource SleepGeometry}"
                                      Visibility="{Binding Item.Resting, IsAsync=True, FallbackValue=Hidden, Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.Resting, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>

            <!-- InSelections -->
            <controls:HeaderPanel Grid.Column="5"
                                  Header="{Binding Item.InSelections.Count, IsAsync=True}"
                                  HeaderStringFormat="{Binding Source={x:Static resources:TrainingResources.InSelectionsWithCount}, Converter={StaticResource ToUpperConverter}}"
                                  HeaderForeground="{DynamicResource Information}"
                Icon="{StaticResource FootballGeometry}"
                Visibility="{Binding Item.InSelections, IsAsync=True, FallbackValue=Hidden, Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.InSelections, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>

            <!-- Apologied -->
            <controls:HeaderPanel Grid.Column="6"
                                  Header="{Binding Item.Apologied.Count, IsAsync=True}"
                                  HeaderStringFormat="{Binding Source={x:Static resources:TrainingResources.ApologiedWithCount}, Converter={StaticResource ToUpperConverter}}"
                                  HeaderForeground="{DynamicResource Warning}"
                Icon="{StaticResource NoteGeometry}"
                Visibility="{Binding Item.Apologied, IsAsync=True, FallbackValue=Hidden, Converter={StaticResource AnyToVisibilityConverter}}">
                <ItemsControl ItemsSource="{Binding Item.Apologied, IsAsync=True}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Style="{StaticResource PlayerThumbnailStyle}" Content="{Binding Player, IsAsync=True}" Margin="{StaticResource MediumMargin}" ToolTip="{Binding Reason}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </controls:HeaderPanel>
        </Grid>
    </Grid>
</UserControl>