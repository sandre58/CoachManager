<UserControl x:Class="My.CoachManager.Presentation.Views.Dialogs.MessagePopupView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:micro="http://www.caliburnproject.org"
             xmlns:extra="http://schemas.extra.com/ui"
        mc:Ignorable="d"
        xmlns:dialogs="clr-namespace:My.CoachManager.Presentation.ViewModels.Dialogs"
        xmlns:enums="clr-namespace:My.CoachManager.Presentation.Core.ViewModels.Screens.Enums;assembly=My.CoachManager.Presentation.Core"
        d:DataContext="{d:DesignInstance Type=dialogs:MessagePopupViewModel}"
        micro:Bind.AtDesignTime="True">

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="UserControl">
                        <Border Name="Base" CornerRadius="7" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Margin="{StaticResource DefaultHorizontalMargin}">
                                <StackPanel Orientation="Horizontal">
                                    <extra:Icon x:Name="Icon" Size="Small" Margin="{StaticResource DefaultHorizontalMargin}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Style, Converter={StaticResource NullToVisibilityConverter}}"
                            Foreground="{DynamicResource AccentSelectedColorBrush}" />
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding DisplayName}" FontSize="{StaticResource SmallTitleFontSize}" FontWeight="Bold" Foreground="{DynamicResource AccentSelectedColorBrush}" Margin="{StaticResource DefaultMargin}" />
                                        <TextBlock Text="{Binding Message}" Foreground="{DynamicResource AccentSelectedColorBrush}" Margin="{StaticResource DefaultHorizontalMargin}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Information}">
                                <Setter TargetName="Icon" Property="Style" Value="{DynamicResource InfoMessageIconStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Error}">
                                <Setter TargetName="Icon" Property="Style" Value="{DynamicResource ErroMessageIconStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Success}">
                                <Setter TargetName="Icon" Property="Style" Value="{DynamicResource OkIconStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Warning}">
                                <Setter TargetName="Icon" Property="Style" Value="{DynamicResource WarningMessage1IconStyle}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Information}">
                    <Setter Property="BorderBrush" Value="{StaticResource InformationActionBrush}" />
                    <Setter Property="Background" Value="{StaticResource InformationActionBrush2}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Error}">
                    <Setter Property="BorderBrush" Value="{StaticResource NegativeActionBrush}" />
                    <Setter Property="Background" Value="{StaticResource NegativeActionBrush2}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Success}">
                    <Setter Property="BorderBrush" Value="{StaticResource PositiveActionBrush}" />
                    <Setter Property="Background" Value="{StaticResource PositiveActionBrush2}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessagePopupStyle.Warning}">
                    <Setter Property="BorderBrush" Value="{StaticResource WarningActionBrush}" />
                    <Setter Property="Background" Value="{StaticResource WarningActionBrush2}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
</UserControl>