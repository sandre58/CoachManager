<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:extra="http://schemas.extra.com/ui"
                    xmlns:strings="clr-namespace:My.CoachManager.Presentation.Resources.Strings"
                    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:params="clr-namespace:My.CoachManager.Presentation.Parameters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <!--<ResourceDictionary Source="../Base/Brushes.xaml" />-->
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Base/Fonts.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="SimpleButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroFlatButton}">
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="{StaticResource MidSmallWidth}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="mahapps:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    </Style>

    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
        <Setter Property="params:ControlParameters.MouseOverForeground" Value="{DynamicResource MouseOverBorderBrush}" />
        <Setter Property="params:ControlParameters.PressedForeground" Value="{DynamicResource PressedBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource TransparentBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template" Value="{StaticResource SimpleButtonTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:ControlParameters.MouseOverForeground)}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(params:ControlParameters.PressedForeground)}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ControlsDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconSimpleButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SimpleButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <extra:Icon Size="Custom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{TemplateBinding params:ControlParameters.Icon}" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush5}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="0" />
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.95" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonWidth)}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonWidth)}" />
        <Setter Property="Margin" Value="{StaticResource DefaultHorizontalMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontFamily)}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontSize)}" />
        <Setter Property="mahapps:TextBoxHelper.IsClearTextButtonBehaviorEnabled" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ClearTextButton), Mode=OneWay}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="0" />
                        <extra:Icon Size="Custom" Margin="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{DynamicResource Delete1IconStyle}" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonWidth)}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonWidth)}" />
        <Setter Property="Margin" Value="{StaticResource DefaultHorizontalMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontFamily)}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontSize)}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource PositiveActionBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="0" />
                        <extra:Icon Size="Custom" Margin="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{DynamicResource Add1IconStyle}" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonWidth)}" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonWidth)}" />
        <Setter Property="Margin" Value="{StaticResource DefaultHorizontalMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontFamily)}" />
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:TextBoxHelper.ButtonFontSize)}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="0" />
                        <extra:Icon Size="Custom" Margin="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{DynamicResource Delete1IconStyle}" Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <extra:Icon Size="Small" Style="{DynamicResource OkIconStyle}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground, Mode=OneWay}" Margin="{StaticResource DefaultHorizontalMargin}" />
                        <TextBlock Text="{Binding Source={x:Static strings:ControlResources.Filter}, Converter={StaticResource StringToUpperConverter}}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>