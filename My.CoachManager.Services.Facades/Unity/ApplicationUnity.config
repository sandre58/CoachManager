<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <containers>
      <container name="RootContainer">
        <extension type="Interception" />

        <!-- ******************* "Root" container: application services mappings ******************* -->

        <!-- Admin -->
        <register type="My.CoachManager.Application.Services.Categories.ICategoryAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Categories.CategoryAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>
        <register type="My.CoachManager.Application.Services.Positions.IPositionAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Positions.PositionAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>
        <register type="My.CoachManager.Application.Services.Seasons.ISeasonAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Seasons.SeasonAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>
        <register type="My.CoachManager.Application.Services.Addresses.IAddressAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Addresses.AddressAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>

        <!-- Person -->
        <register type="My.CoachManager.Application.Services.Persons.ICountryAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Persons.CountryAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>
        <register type="My.CoachManager.Application.Services.Persons.IPlayerAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Persons.PlayerAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>

        <!-- Users -->
        <register type="My.CoachManager.Application.Services.Users.IUserAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Users.UserAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>

        <!-- Rosters -->
        <register type="My.CoachManager.Application.Services.Rosters.IRosterAppService, My.CoachManager.Application.Services"
                  mapTo="My.CoachManager.Application.Services.Rosters.RosterAppService, My.CoachManager.Application.Services">
          <lifetime type="resolve" />
          <interceptor type="InterfaceInterceptor" />
          <interceptionBehavior type="My.CoachManager.CrossCutting.Unity.Behaviors.DebugBehavior, My.CoachManager.CrossCutting.Unity" />
          <policyInjection />
        </register>
      </container>
    </containers>
  </unity>
</configuration>