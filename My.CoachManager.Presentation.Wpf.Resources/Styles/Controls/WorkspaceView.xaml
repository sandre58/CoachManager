<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Wpf.Controls;assembly=My.CoachManager.Presentation.Wpf.Controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Wpf.Controls.Parameters;assembly=My.CoachManager.Presentation.Wpf.Controls"
                    xmlns:strings="clr-namespace:My.CoachManager.CrossCutting.Core.Resources;assembly=My.CoachManager.CrossCutting.Core"
                    xmlns:converters="clr-namespace:My.CoachManager.Presentation.Wpf.Resources.Converters"
                    xmlns:viewModels="clr-namespace:My.CoachManager.Presentation.Wpf.Core.ViewModels;assembly=My.CoachManager.Presentation.Wpf.Core"
                    xmlns:interfaces="clr-namespace:My.CoachManager.Presentation.Wpf.Core.ViewModels.Interfaces;assembly=My.CoachManager.Presentation.Wpf.Core"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:selectors="clr-namespace:My.CoachManager.Presentation.Wpf.Resources.Selectors"
                    xmlns:core="clr-namespace:My.CoachManager.Presentation.Wpf.Core;assembly=My.CoachManager.Presentation.Wpf.Core"
                    xmlns:commands="clr-namespace:My.CoachManager.Presentation.Wpf.Core.Commands;assembly=My.CoachManager.Presentation.Wpf.Core"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Fonts.xaml" />
        <ResourceDictionary Source="../Controls/CommandButton.xaml" />
        <ResourceDictionary Source="../Controls/TextBlock.xaml" />
        <ResourceDictionary Source="../Controls/Icon.xaml" />
        <ResourceDictionary Source="../Controls/Button.xaml" />
        <ResourceDictionary Source="../Controls/TextBox.xaml" />
        <ResourceDictionary Source="../Controls/DropDownButton.xaml" />
        <ResourceDictionary Source="../Controls/Filter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Controls -->
    <controls:Icon x:Key="ItemTrackingIcon"
                           Size="Small" 
                           Content="{StaticResource InformationGeometry}" 
                           Visibility="{Binding Mode, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static viewModels:ScreenMode.Edition}}">
        <controls:Icon.ToolTip>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Orientation="Vertical">

                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="{StaticResource DefaultVerticalMargin}">
                            <TextBlock Text="{x:Static strings:ControlResources.CreatedBy}" Style="{StaticResource ReferenceStyle}" />
                            <TextBlock Text="{Binding Item.CreatedBy}" Style="{StaticResource ReferenceStyle}" Foreground="{DynamicResource NormalForeground}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Static strings:ControlResources.CreatedFrom}" Style="{StaticResource ReferenceStyle}" />
                            <TextBlock Text="{Binding Item.CreatedDate, StringFormat={}{0:dd/MM/yyyy}}" Style="{StaticResource ReferenceStyle}" Foreground="{DynamicResource NormalForeground}" />
                            <TextBlock Text="{x:Static strings:GlobalResources.To}" Style="{StaticResource ReferenceStyle}" />
                            <TextBlock Text="{Binding Item.CreatedDate, StringFormat={}{0:HH:mm}}" Style="{StaticResource ReferenceStyle}" Foreground="{DynamicResource NormalForeground}" />
                        </StackPanel>
                    </StackPanel>

                    <Separator Margin="{StaticResource MediumVerticalMargin}" />

                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Vertical"
                                            Visibility="{Binding Item.ModifiedDate, Converter={StaticResource NullToVisibilityConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{x:Static strings:ControlResources.ModifiedBy}" Style="{StaticResource ReferenceStyle}" />
                                <TextBlock Text="{Binding Item.ModifiedBy}" Style="{StaticResource ReferenceStyle}" Foreground="{DynamicResource NormalForeground}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="{StaticResource DefaultVerticalMargin}">
                                <TextBlock Text="{x:Static strings:ControlResources.ModifiedFrom}" Style="{StaticResource ReferenceStyle}" />
                                <TextBlock Text="{Binding Item.ModifiedDate, StringFormat={}{0:dd/MM/yyyy}}" Style="{StaticResource ReferenceStyle}" Foreground="{DynamicResource NormalForeground}" />
                                <TextBlock Text="{x:Static strings:GlobalResources.To}" Style="{StaticResource ReferenceStyle}" />
                                <TextBlock Text="{Binding Item.ModifiedDate, StringFormat={}{0:HH:mm}}" Style="{StaticResource ReferenceStyle}" Foreground="{DynamicResource NormalForeground}" />
                            </StackPanel>
                        </StackPanel>
                        <TextBlock Text="{x:Static strings:ControlResources.NoModifications}"
                                           Style="{StaticResource ReferenceStyle}" FontStyle="Italic" HorizontalAlignment="Center"
                                           Visibility="{Binding Item.ModifiedDate, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </controls:Icon.ToolTip>
    </controls:Icon>

    <!-- Header -->
    <ControlTemplate x:Key="DefaultNavigableWorkspaceHeaderTemplate" TargetType="{x:Type ContentControl}">
        <Border Background="{DynamicResource Accent}" Padding="{StaticResource VeryLargeMargin}" Focusable="False">

            <Grid Margin="{StaticResource LargeBottomMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="{StaticResource LargeRightMargin}">
                    <controls:CommandButton Style="{StaticResource AccentCommandButtonStyle}" Content="{StaticResource ArrowLeftGeometry}" Margin="{StaticResource SmallHorizontalMargin}" VerticalAlignment="Center" Command="{x:Static commands:NavigationCommandsManager.GoBackCommand}" />
                    <controls:CommandButton Style="{StaticResource AccentCommandButtonStyle}" Content="{StaticResource ArrowRightGeometry}" Margin="{StaticResource SmallHorizontalMargin}" VerticalAlignment="Center" Command="{x:Static commands:NavigationCommandsManager.GoForwardCommand}" />
                </StackPanel>

                <ContentPresenter Grid.Column="1" Focusable="False" VerticalAlignment="Center" />

            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="DefaultDialogWorkspaceHeaderTemplate" TargetType="{x:Type ContentControl}">
        <Border Background="{DynamicResource HeaderBackground}" Padding="{StaticResource MediumMargin}" Focusable="False">
            <ContentPresenter Focusable="False" />
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="DefaultEditDialogHeaderTemplate" DataType="{x:Type interfaces:IEditViewModel}">
        <Grid Height="65">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Icon -->
            <controls:Icon x:Name="Icon" Width="40" Height="40" Size="Custom" Content="{StaticResource ChevronRightGeometry}" Grid.Column="0" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center"
                           Style="{StaticResource EllipseIconBaseStyle}"
                           Foreground="{DynamicResource NormalForeground}"
                           OverlayBackground="{DynamicResource Dark}" />

            <!-- Header -->
            <TextBlock Grid.Column="1" Text="{Binding Title}" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center" Style="{StaticResource HeaderStyle}" />

            <!-- Info -->
            <ContentControl Grid.Column="2" Content="{StaticResource ItemTrackingIcon}" VerticalAlignment="Top" />

        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Mode}" Value="{x:Static viewModels:ScreenMode.Creation}">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource AddGeometry}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode}" Value="{x:Static viewModels:ScreenMode.Edition}">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource EditPageGeometry}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DefaultSelectItemsDialogHeaderTemplate" DataType="{x:Type interfaces:ISelectItemsViewModel}">
        <Grid  Height="65">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Icon -->
            <controls:Icon x:Name="Icon" Width="40" Height="40" Size="Custom" Content="{StaticResource ListSelectGeometry}" Grid.Column="0" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center"
                           Style="{StaticResource EllipseIconBaseStyle}"
                           Foreground="{DynamicResource NormalForeground}"
                           OverlayBackground="{DynamicResource Dark}" />

            <!-- Header -->
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center">
                <TextBlock Text="{Binding Title}" Style="{StaticResource HeaderStyle}" VerticalAlignment="Center" Margin="{StaticResource MediumRightMargin}"/>

                <!-- Count -->
                <Border
                             CornerRadius="3" Background="{DynamicResource Control}" BorderThickness="1" BorderBrush="{DynamicResource Transparent}"
                             Padding="{StaticResource DefaultMargin}"
                             ToolTip="{x:Static strings:ControlResources.Items}" VerticalAlignment="Center" HorizontalAlignment="Left"
                    Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                    <TextBlock Margin="0" parameters:PanelParameters.NotAffectMargin="True"
                                       Text="{Binding Items.Count}"
                                       Style="{StaticResource SmallHeaderStyle}" />
                </Border>

            </StackPanel>

        </Grid>

    </DataTemplate>

    <!-- Top Content -->
    <DataTemplate x:Key="DefaultListParametersTemplate" DataType="{x:Type viewModels:ListParameters}">
        <WrapPanel DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="{StaticResource MediumHorizontalMargin}">
            <controls:DropDownButton Style="{StaticResource IconDropDownButtonStyle}"
                                     Content="{StaticResource EyeGeometry}" Height="{StaticResource SmallHeight}"
                                     ToolTip="{x:Static strings:ControlResources.ShowData}">
                <controls:DropDownButton.Submenu>
                    <controls:Submenu
                        ItemsSource="{Binding PresetColumns.Keys}">
                        <controls:Submenu.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                <Setter Property="Header" Value="{Binding Converter={StaticResource EnumToStringConverter}}" />
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownButton}, Path=DataContext.ChangeDisplayedColumnsCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding }" />
                            </Style>
                        </controls:Submenu.ItemContainerStyle>
                    </controls:Submenu>
                </controls:DropDownButton.Submenu>
            </controls:DropDownButton>
        </WrapPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultPagingTemplate" DataType="{x:Type interfaces:IPagingFiltersViewModel}">
        <StackPanel Orientation="Horizontal" parameters:PanelParameters.ItemsMargin="{StaticResource SmallHorizontalMargin}">
            <controls:CommandButton Style="{StaticResource SmallCommandButtonStyle}"
                                        Content="{StaticResource FirstGeometry}"
                                        Command="{Binding MoveToFirstPageCommand}"
                                        ToolTip="{x:Static strings:ControlResources.FirstPage}" />
            <controls:CommandButton Style="{StaticResource SmallCommandButtonStyle}"
                                                        Content="{StaticResource PreviousGeometry}"
                                                        Command="{Binding MoveToPreviousPageCommand}"
                                                        ToolTip="{x:Static strings:ControlResources.PreviousPage}" />
            <ComboBox x:Name="PageComboBox" IsTextSearchEnabled="True"
                                          ItemsSource="{Binding PagesCount, Converter={StaticResource IntegerToRangeConverter}, ConverterParameter=1, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding CurrentPage, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                          Width="40"
                                          parameters:TextBoxParameters.Mask="PositiveInteger"
                                          IsEditable="True"
                                          Style="{StaticResource ComboBoxStyle}"
                                          ToolTip="{x:Static strings:ControlResources.CurrentPage}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding MoveToPageCommand}" CommandParameter="{Binding ElementName=PageComboBox, Path=SelectedValue}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <controls:CommandButton Style="{StaticResource SmallCommandButtonStyle}"
                                                        Content="{StaticResource NextGeometry}"
                                                        Command="{Binding MoveToNextPageCommand}"
                                                        ToolTip="{x:Static strings:ControlResources.NextPage}" />
            <controls:CommandButton Style="{StaticResource SmallCommandButtonStyle}"
                                                        Content="{StaticResource LastGeometry}"
                                                        Command="{Binding MoveToLastPageCommand}"
                                                        ToolTip="{x:Static strings:ControlResources.LastPage}" />
            <TextBlock Text="#" Margin="{StaticResource MediumLeftMargin}" parameters:PanelParameters.NotAffectMargin="True" />
            <ComboBox x:Name="ItemsPerPageComboBox"
                                              ItemsSource="{x:Static core:ConfigurationManager.ItemsPerPageList}"
                                              DisplayMemberPath="Key"
                                              SelectedValuePath="Value"
                                              SelectedValue="{Binding ItemsPerPage, UpdateSourceTrigger=PropertyChanged}"
                                              Width="70" Style="{StaticResource ComboBoxStyle}" ToolTip="{x:Static strings:ControlResources.ItemsPerPage}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultListTopContentTemplate" DataType="{x:Type interfaces:IListViewModel}">

            <Grid Margin="{StaticResource SmallHorizontalMargin}" MinHeight="70">

                <DockPanel parameters:PanelParameters.ItemsMargin="{StaticResource DefaultHorizontalMargin}" Margin="{StaticResource SmallVerticalMargin}">

                    <StackPanel DockPanel.Dock="Left" Orientation="Vertical" VerticalAlignment="Top" Margin="{StaticResource MediumHorizontalMargin}" HorizontalAlignment="Left">

                        <!-- Selected count -->
                        <TextBlock x:Name="SelectedCountTextBlock"
                                   FontSize="{StaticResource NormalFontSize}"
                                   Text="{Binding SelectedItems.Count, StringFormat={x:Static strings:ControlResources.CountSelectedItemsToUpper}}"
                                   Foreground="{DynamicResource SecondaryAccent}"
                                   Style="{StaticResource VerySmallHeaderStyle}" Visibility="Hidden" />

                        <!-- Count -->
                    <ContentControl x:Name="CountItems" Content="{Binding Items.Count}" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{x:Static strings:ControlResources.Items}" Style="{StaticResource ContentBadgeStyle}" />
 
                    </StackPanel>

                    <!-- Columns Parameters -->
                <ContentControl Content="{Binding ListParameters}" ContentTemplate="{StaticResource DefaultListParametersTemplate}" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right"
                                Visibility="{Binding ListParameters, Converter={StaticResource NullToVisibilityConverter}}" />

                </DockPanel>
            </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Items.Count}" Value="0">
                <Setter TargetName="CountItems" Property="BorderBrush" Value="{DynamicResource Negative}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedItems.Count, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SelectedCountTextBlock" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DefaultListWithFiltersTopContentTemplate" DataType="{x:Type interfaces:IListViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Margin="{StaticResource SmallHorizontalMargin}" MinHeight="70">

                <!-- Filters header -->
                <DockPanel parameters:PanelParameters.ItemsMargin="{StaticResource DefaultHorizontalMargin}" Margin="{StaticResource SmallVerticalMargin}"
                           Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}">

                    <!-- Filters Search -->
                    <WrapPanel DockPanel.Dock="Left" VerticalAlignment="Center" Margin="{StaticResource MediumHorizontalMargin}">
                        <ContentControl Content="{Binding Filters.SpeedFilter}" Style="{StaticResource SpeedFilterStyle}" Focusable="False" />
                        <Button Content="{x:Static strings:ControlResources.Clear}" Style="{StaticResource SmallButtonStyle}" Command="{Binding Filters.ResetFiltersCommand}" />
                        <controls:Badged x:Name="FiltersBadge" Badge="{Binding Filters.CountActiveFilters}" VerticalAlignment="Center">
                            <Button x:Name="ShowHideFilterButton" Content="{x:Static strings:ControlResources.ShowFilters}" Command="{Binding Filters.ShowFiltersCommand}" Style="{StaticResource SmallButtonStyle}" />
                        </controls:Badged>
                    </WrapPanel>

                    <!-- Separator -->
                    <Rectangle Width="1"
                       VerticalAlignment="Stretch"
                       parameters:PanelParameters.NotAffectMargin="True"
                           Margin="{StaticResource DefaultMargin}"
                       Fill="{DynamicResource Control}"
                       IsHitTestVisible="False"
                       SnapsToDevicePixels="True"
                       UseLayoutRounding="True"
                           Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}" />

                    <!-- Count Items -->
                    <StackPanel DockPanel.Dock="Left" Orientation="Vertical" VerticalAlignment="Top" Margin="{StaticResource MediumHorizontalMargin}">

                        <!-- Selected count -->
                        <TextBlock x:Name="SelectedCountTextBlock"
                                       FontSize="{StaticResource NormalFontSize}"
                                       Text="{Binding SelectedItems.Count, StringFormat={x:Static strings:ControlResources.CountSelectedItemsToUpper}}"
                                       Foreground="{DynamicResource SecondaryAccent}"
                                       Style="{StaticResource VerySmallHeaderStyle}" Visibility="Hidden" />

                        <StackPanel Orientation="Horizontal">

                            <!-- Count -->
                            <ContentControl x:Name="CountFilteredItems" VerticalAlignment="Center" ToolTip="{x:Static strings:ControlResources.Items}" Style="{StaticResource ContentBadgeStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="0" parameters:PanelParameters.NotAffectMargin="True" Text="{Binding Filters.FilteredItemsCount}" />
                                    <TextBlock Margin="0" parameters:PanelParameters.NotAffectMargin="True" Text="/"/>
                                    <TextBlock Margin="0" parameters:PanelParameters.NotAffectMargin="True" Text="{Binding Filters.AllItemsCount}" />
                                </StackPanel>
                            </ContentControl>
                            
                            <!-- Pagination -->
                            <ContentControl Content="{Binding Filters}">
                                <ContentControl.ContentTemplateSelector>
                                    <selectors:FiltersDataTemplateSelector PagingTemplate="{StaticResource DefaultPagingTemplate}" />
                                </ContentControl.ContentTemplateSelector>
                            </ContentControl>
                        </StackPanel>
                    </StackPanel>

                    <!-- Columns Parameters -->
                    <ContentControl Content="{Binding ListParameters}" ContentTemplate="{StaticResource DefaultListParametersTemplate}" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right" />
                    
                </DockPanel>

            </Grid>

            <!-- Filters Panel -->
            <StackPanel Grid.Row="1" Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}">
                <Grid x:Name="FiltersPanel" Background="{DynamicResource LightHeaderBackground}" parameters:PanelParameters.ItemsMargin="{StaticResource FieldMargin}"
                  Visibility="{Binding Filters.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" MaxHeight="300">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <DockPanel HorizontalAlignment="Stretch">
                        <controls:DropDownButton Style="{StaticResource TextDropDownButtonStyle}"
                                                 Content="{x:Static strings:ControlResources.AddCondition}"
                                                 DockPanel.Dock="Left" HorizontalAlignment="Left">
                            <controls:DropDownButton.Submenu>
                                <controls:Submenu
                                    ItemsSource="{Binding Filters.AllowedFilters}">
                                    <controls:Submenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                            <Setter Property="Header" Value="{Binding Item2}" />
                                            <Setter Property="Command" Value="{Binding DataContext.Filters.AddFilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownButton}}" />
                                            <Setter Property="CommandParameter" Value="{Binding }" />
                                        </Style>
                                    </controls:Submenu.ItemContainerStyle>
                                </controls:Submenu>
                            </controls:DropDownButton.Submenu>
                        </controls:DropDownButton>
                        <Button Content="{x:Static strings:ControlResources.Filter}" DockPanel.Dock="Right" HorizontalAlignment="Right"
                                Style="{StaticResource ColorButtonStyle}" parameters:ControlParameters.Color="{DynamicResource Positive}"
                                Visibility="{Binding Filters.IsAutoFilter, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}"
                                Command="{Binding Filters.ApplyFiltersCommand}" />
                    </DockPanel>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding Filters.Filters}" Focusable="False">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Filters.IsVisible, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter TargetName="ShowHideFilterButton" Property="Content" Value="{x:Static strings:ControlResources.HideFilters}" />
                <Setter TargetName="ShowHideFilterButton" Property="Command" Value="{Binding Filters.HideFiltersCommand}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Filters.IsFiltered}" Value="True">
                <Setter TargetName="CountFilteredItems" Property="BorderBrush" Value="{DynamicResource Warning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Filters.FilteredItemsCount}" Value="0">
                <Setter TargetName="CountFilteredItems" Property="BorderBrush" Value="{DynamicResource Negative}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Filters.CountActiveFilters}" Value="0">
                <Setter TargetName="FiltersBadge" Property="BadgeBackground" Value="{DynamicResource Disabled}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedItems.Count, Converter={StaticResource IsGreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SelectedCountTextBlock" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Workspace -->
    <Style TargetType="{x:Type controls:WorkspaceView}">
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource NormalFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="IsLoadingText" Value="{x:Static strings:MessageResources.Loading}" />
        <Setter Property="HeaderControlTemplate" Value="{StaticResource DefaultNavigableWorkspaceHeaderTemplate}" />
        <Setter Property="Header" Value="{Binding Title}" />
        <Setter Property="TopContentBackground" Value="{DynamicResource HeaderBackground}" />
        <Setter Property="TopContentTemplateSelector">
            <Setter.Value>
                <selectors:WorkspaceTopContentTemplateSelector ListFiltersTemplate="{StaticResource DefaultListWithFiltersTopContentTemplate}" ListTemplate="{StaticResource DefaultListTopContentTemplate}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplateSelector">
            <Setter.Value>
                <selectors:WorkspaceHeaderTemplateSelector EditTemplate="{StaticResource DefaultEditDialogHeaderTemplate}" SelectItemsTemplate="{StaticResource DefaultSelectItemsDialogHeaderTemplate}" />
            </Setter.Value>
        </Setter>
        <Setter Property="IsLoading">
            <Setter.Value>
                <Binding Path="State" Converter="{StaticResource EnumToBooleanConverter}">
                    <Binding.ConverterParameter>
                        <converters:EnumCollection>
                            <x:Static Member="viewModels:ScreenState.Loading" />
                            <x:Static Member="viewModels:ScreenState.Saving" />
                        </converters:EnumCollection>
                    </Binding.ConverterParameter>
                </Binding>
            </Setter.Value>
        </Setter>

        <Setter Property="parameters:ControlParameters.InputBindings">
            <Setter.Value>
                <InputBindingCollection>
                    <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
                </InputBindingCollection>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WorkspaceView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Header -->
                        <ContentControl Focusable="False"
                                        IsTabStop="False"
                                        Template="{TemplateBinding HeaderControlTemplate}"
                                        Padding="{TemplateBinding Padding}"
                                        Content="{TemplateBinding Header}"
                                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Foreground="{DynamicResource AccentForeground}"
                                        TextBlock.FontWeight="Bold"
                                        TextBlock.FontSize="{DynamicResource SmallHeaderFontSize}"
                                        Visibility="{Binding ShowHeader, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <!-- Top Content -->
                        <Border Grid.Row="1" Background="{TemplateBinding TopContentBackground}" Focusable="False"
                                Visibility="{Binding HasContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ContentControl Focusable="False"
                                            IsTabStop="False"
                                            Content="{Binding }"
                                            ContentTemplate="{TemplateBinding TopContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding TopContentTemplateSelector}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Foreground="{TemplateBinding Foreground}" />
                        </Border>

                        <!-- Content -->
                        <ContentPresenter x:Name="Content" Grid.Row="2" ContentSource="Content" />

                        <!-- Commands -->
                        <controls:ApplicationBar x:Name="Commands" Grid.Row="3" Grid.Column="0" ItemsSource="{TemplateBinding Commands}"
                                                 Visibility="{TemplateBinding Commands, Converter={StaticResource AnyToVisibilityConverter}}" />

                        <!-- Loading -->
                        <Border x:Name="Loader" Grid.Row="1" Grid.RowSpan="2" Background="{DynamicResource DarkControl}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">
                            <Grid>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <controls:ProgressRing Width="70" Height="70" />
                                    <TextBlock Style="{StaticResource HeaderStyle}" Foreground="{DynamicResource DarkSecondaryAccent}" Text="{TemplateBinding IsLoadingText}" Margin="{StaticResource MediumVerticalMargin}" FontStyle="Italic" Visibility="Collapsed" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLoading" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.15" Storyboard.TargetName="Loader" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1" To="0" Duration="0:0:0.15" Storyboard.TargetName="Loader" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="Loader" Property="Opacity" Value="0">
                            <Setter TargetName="Loader" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogWorkspaceViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource {x:Type controls:WorkspaceView}}">
        <Setter Property="TopContentBackground" Value="{DynamicResource LightHeaderBackground}" />
        <Setter Property="Header" Value="{Binding}" />
        <Setter Property="HeaderControlTemplate" Value="{StaticResource DefaultDialogWorkspaceHeaderTemplate}" />
    </Style>

    <Style x:Key="SelectItemsWorkspaceViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource DialogWorkspaceViewStyle}">
    </Style>

    <Style x:Key="EditWorkspaceViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource DialogWorkspaceViewStyle}">
        <Setter Property="parameters:ControlParameters.InputBindings">
            <Setter.Value>
                <InputBindingCollection>
                    <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
                    <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
                </InputBindingCollection>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>