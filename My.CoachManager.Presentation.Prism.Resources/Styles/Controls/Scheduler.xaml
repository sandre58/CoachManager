<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:calendars="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Schedulers;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:models="clr-namespace:My.CoachManager.Presentation.Prism.Core.Models;assembly=My.CoachManager.Presentation.Prism.Core">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Shadows.xaml" />
        <ResourceDictionary Source="../Base/Sizes.xaml" />
<ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="CommandButton.xaml" />
        <ResourceDictionary Source="ScrollBar.xaml" />
        <ResourceDictionary Source="ToolbarControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToolbarControlForSchedulerAppointmentStyle" TargetType="{x:Type controls:ToolbarControl}" BasedOn="{StaticResource {x:Type controls:ToolbarControl}}">
        <Setter Property="Direction" Value="RightToLeft" />
        <Setter Property="PlacementTarget" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type calendars:SchedulerAppointment}}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type calendars:SchedulerAppointment}}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.SelectedItems, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type controls:Scheduler}}, Converter={StaticResource AnyToBooleanConverter}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.SelectedItems, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type controls:Scheduler}}, Converter={StaticResource AnyToBooleanConverter}}" Value="True">
                <Setter Property="ShowActions" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="AppointmentDataTemplate" DataType="{x:Type models:IAppointment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StartDate, StringFormat=HH\\:mm}" FontWeight="Bold" />
            <TextBlock Text="-" Margin="0" />
            <TextBlock Text="{Binding EndDate, StringFormat=HH\\:mm}" FontWeight="Bold" />
            <TextBlock Text=":" Visibility="{Binding Title, Converter={StaticResource NullToVisibilityConverter}}" />
            <TextBlock Text="{Binding Title}" />
        </StackPanel>
    </DataTemplate>
    
    <Style TargetType="{x:Type calendars:SchedulerAppointment}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Style.Resources>
            <Style TargetType="{x:Type controls:ToolbarControl}" BasedOn="{StaticResource ToolbarControlForSchedulerAppointmentStyle}" />
        </Style.Resources>
        <Setter Property="Color" Value="{DynamicResource DarkAccent}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Setter Property="Command" Value="{Binding AppointmentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Scheduler}}}" />
        <Setter Property="BorderBrush" Value="{Binding Color, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" >
            <Setter.Value>
                <SolidColorBrush Color="{Binding Color.Color, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type calendars:SchedulerAppointment}}}" Opacity="{DynamicResource ColorOpacity}" />
            </Setter.Value>
            </Setter>
        <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="parameters:ControlParameters.MouseOverForeground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="parameters:ControlParameters.MouseOverBorderBrush" Value="{Binding Color, RelativeSource={RelativeSource Self}}" />
        <Setter Property="parameters:ControlParameters.MouseOverBackground" Value="{Binding Color, RelativeSource={RelativeSource Self}}" />
        <Setter Property="parameters:ControlParameters.PressedBorderBrush" Value="{Binding Color, RelativeSource={RelativeSource Self}}" />
        <Setter Property="parameters:ControlParameters.PressedBackground" Value="{Binding Color, RelativeSource={RelativeSource Self}}" />
        <Setter Property="parameters:ControlParameters.FocusForeground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="parameters:ControlParameters.FocusBorderBrush" Value="{Binding Color, RelativeSource={RelativeSource Self}}" />
        <Setter Property="parameters:ControlParameters.FocusBackground" >
            <Setter.Value>
                <SolidColorBrush Color="{Binding Color.Color, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type calendars:SchedulerAppointment}}}" Opacity="{DynamicResource ColorOpacity}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="BorderThickness" Value="5,0,0,0" />
        <Setter Property="ContentTemplate" Value="{StaticResource AppointmentDataTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="SchedulerDayStyle" TargetType="{x:Type controls:SchedulerDay}">
        <Setter Property="Background" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SchedulerDay}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource SmallScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions >
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <ContentPresenter Grid.Row="0" x:Name="NormalText"
                                              Margin="{StaticResource DefaultMargin}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"/>
                            
                            <DockPanel Grid.Row="0" Grid.Column="1" Margin="{StaticResource DefaultMargin}">
                                <Button x:Name="AddButton" DockPanel.Dock="Right" Style="{StaticResource AddButtonStyle}" HorizontalAlignment="Right"
                                        Width="18" Height="18" Visibility="Collapsed"
                                        Command="{Binding AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType= {x:Type controls:Scheduler}}}"
                                        CommandParameter="{Binding}"/>
                            </DockPanel>

                            <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Padding="{TemplateBinding Padding}"
                                          Focusable="False"
                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          Visibility="{TemplateBinding HasItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                            
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AddButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType= {x:Type controls:Scheduler}}}" Value="{x:Null}">
                            <Setter TargetName="AddButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Grid.Row), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                    <Condition Binding="{Binding (Grid.Column), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="0,1,1,1" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Grid.Row), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="False" />
                    <Condition Binding="{Binding (Grid.Column), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="1,0,1,1" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Grid.Row), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                    <Condition Binding="{Binding (Grid.Column), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="1"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <Trigger Property="IsToday" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsInactive" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource ColorOpacity}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource LightControlMouseOver}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SchedulerItemStyle" TargetType="{x:Type controls:SchedulerItem}">
        <Setter Property="Background" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SchedulerItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="HighlightBackground"
                                   Fill="{DynamicResource Control}"
                                   Opacity="0" />
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="{DynamicResource Accent}"
                                   Opacity="0" />
                        <Rectangle x:Name="SchedulerButtonFocusVisual"
                                   Fill="{DynamicResource Accent}"
                                   Stroke="{DynamicResource Accent}"
                                   IsHitTestVisible="false"
                                   Visibility="Collapsed" />
                        <ContentControl x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{DynamicResource NormalForeground}"
                                        Foreground="{TemplateBinding Foreground}"
                                          parameters:ControlParameters.CharacterCasing="FirstLetterUpper"
                                         Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Grid.Row), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                    <Condition Binding="{Binding (Grid.Column), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="0,1,1,1" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Grid.Row), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="False" />
                    <Condition Binding="{Binding (Grid.Column), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="1,0,1,1" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Grid.Row), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                    <Condition Binding="{Binding (Grid.Column), RelativeSource={RelativeSource Self}, Converter={StaticResource EqualsConverter}, ConverterParameter='0'}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" Value="1"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <Trigger Property="IsInactive" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource GrayForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource LightControlMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SchedulerPanelStyle" TargetType="{x:Type controls:SchedulerPanel}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SchedulerPanel}">
                    <ControlTemplate.Resources>
                        <!--  Used for day names  -->
                        <DataTemplate x:Key="{x:Static controls:SchedulerPanel.DayTitleTemplateResourceKey}">
                            <Border Background="{DynamicResource SecondMenu}">
                                <Grid>
                                    <ContentControl Margin="{StaticResource DefaultMargin}"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Foreground="{DynamicResource MenuForeground}"
                                                    TextElement.FontFamily="{DynamicResource NormalFontFamily}"
                                                    TextElement.FontSize="{DynamicResource NormalFontSize}"
                                                    parameters:ControlParameters.CharacterCasing="Upper"
                                                    Content="{Binding Converter={StaticResource CalendarDayNameConverter}}" />
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="{StaticResource LargeBottomMargin}">
                                <StackPanel Orientation="Horizontal" Margin="{StaticResource LargeHorizontalMargin}">
                                    <controls:CommandButton x:Name="PART_PreviousButton"
                                            Content="{StaticResource ArrowLeftGeometry}"
                                                            Margin="{StaticResource SmallHorizontalMargin}"/>
                                    <controls:CommandButton x:Name="PART_NextButton"
                                                            Content="{StaticResource ArrowRightGeometry}"
                                                            Margin="{StaticResource SmallHorizontalMargin}" />
                                </StackPanel>
                                <Button x:Name="PART_HeaderButton"
                                        Style="{StaticResource TextButtonStyle}"
                                        FontFamily="{DynamicResource NormalFontFamily}"
                                        FontSize="{DynamicResource SmallHeaderFontSize}" >
                                    <Button.ContentTemplate>
                                        <DataTemplate>
                                            <ContentControl Content="{Binding}" parameters:ControlParameters.CharacterCasing="FirstLetterUpper" />
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                            </StackPanel>
                            <Grid x:Name="PART_MonthView"
                                  Grid.Row="1"        
                                  HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Visibility="Visible">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                            </Grid>
                            <Grid x:Name="PART_YearView"
                                      Grid.Row="1"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Visibility="Hidden">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Scheduler}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:Scheduler}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SchedulerStyle" TargetType="{x:Type controls:Scheduler}">
        <Setter Property="Foreground" Value="{DynamicResource Control}" />
        <Setter Property="Background" Value="{DynamicResource HeaderBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control}" />
        <Setter Property="BorderThickness" Value="0" /> 
        <Setter Property="SchedulerItemStyle" Value="{StaticResource SchedulerItemStyle}" />
        <Setter Property="SchedulerDayStyle" Value="{StaticResource SchedulerDayStyle}" />
        <Setter Property="SchedulerPanelStyle" Value="{StaticResource SchedulerPanelStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Scheduler}">
                    <Grid x:Name="PART_Root">
                        <controls:SchedulerPanel x:Name="PART_SchedulerPanel"
                                      Style="{TemplateBinding SchedulerPanelStyle}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type controls:Scheduler}" BasedOn="{StaticResource SchedulerStyle}" />
</ResourceDictionary>