<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:dialog="clr-namespace:My.CoachManager.Presentation.Prism.Core.Dialog;assembly=My.CoachManager.Presentation.Prism.Core"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="TextBlock.xaml" />
        <ResourceDictionary Source="Icon.xaml" />
        <ResourceDictionary Source="WindowCommands.xaml" />
        <ResourceDictionary Source="Thumb.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ModernWindowTitle" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <ControlTemplate x:Key="ExtendedWindowTemplate" TargetType="{x:Type controls:ExtendedWindow}">
        <Grid
            Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
            <AdornerDecorator>
                <Grid Background="{TemplateBinding Background}" x:Name="LayoutRoot">
                    <Grid.ColumnDefinitions>
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  left window commands  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  title  -->
                        <ColumnDefinition Width="*" />
                        <!--  right window commands  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--  the main window content  -->
                    <ContentControl x:Name="Content"
                        Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    FocusVisualStyle="{x:Null}"
                                    IsTabStop="False"
                                    UseLayoutRounding="True">
                        <ContentPresenter />
                    </ContentControl>

                    <Rectangle x:Name="PART_WindowTitleBackground"
                               Grid.Column="0"
                               Grid.Row="0"
                               Grid.ColumnSpan="5"
                               Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Fill="{TemplateBinding WindowTitleBrush}"
                               StrokeThickness="0"
                               Focusable="False"
                               UseLayoutRounding="True"
                               Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  icon  -->
                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    MinWidth="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the left window commands  -->
                    <ContentPresenter x:Name="PART_LeftWindowCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="3"
                                      Grid.Column="1"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <controls:ExtendedThumb x:Name="PART_WindowTitleThumb"
                                         Grid.Row="0"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="5"
                                         Style="{StaticResource WindowTitleThumbStyle}" />
                    <!--  the title bar  -->
                    <controls:ThumbContentControl x:Name="PART_TitleBar"
                                                       Grid.Row="0"
                                                       Grid.Column="2"
                                                       parameters:ControlParameters.ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                                                       Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                       HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                       HorizontalContentAlignment="Stretch"
                                                       VerticalContentAlignment="Stretch"
                                                       Content="{TemplateBinding Title}"
                                                       ContentTemplate="{TemplateBinding TitleTemplate}"
                                                        Foreground="{TemplateBinding TitleForeground}"
                                                       Focusable="False"
                                                       Visibility="{TemplateBinding ShowTitleOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the right window commands  -->
                    <ContentPresenter x:Name="PART_RightWindowCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="3"
                                      Grid.Column="3"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the window button commands  -->
                    <ContentPresenter x:Name="PART_WindowButtonCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="3"
                                      Grid.Column="4"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      UseLayoutRounding="True" />

                    <!--  disables the main content when a modal flyout is shown  -->
                    <Rectangle Name="PART_FlyoutModal"
                               Grid.Row="1"
                               Grid.RowSpan="2"
                               Grid.Column="0"
                               Grid.ColumnSpan="5"
                               Fill="{DynamicResource Dark}"
                               Opacity="0.5"
                               Visibility="Hidden" />
                    <controls:ExtendedThumb x:Name="PART_FlyoutModalDragMoveThumb"
                                         Grid.Row="0"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="5"
                                         Style="{StaticResource WindowTitleThumbStyle}"
                                         Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />

                    <!--  flyouts  -->
                    <ContentControl Grid.Row="0"
                                    Grid.RowSpan="3"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    VerticalAlignment="Stretch"
                                    Panel.ZIndex="2"
                                    Style="{x:Null}"
                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Focusable="False"
                                    KeyboardNavigation.TabNavigation="None" />

                    <!--  overlay effect container  -->
                    <Grid x:Name="PART_OverlayBox"
                          Grid.Row="0"
                          Grid.RowSpan="3"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Panel.ZIndex="4"
                          Background="{TemplateBinding OverlayBrush}"
                          Opacity="0"
                          FocusVisualStyle="{x:Null}"
                          Focusable="False"
                          Visibility="Hidden" />

                    <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" x:Name="PART_StatusBar" Background="{DynamicResource Accent}" MinHeight="25" Focusable="False" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                        <ContentControl Content="{TemplateBinding StatusBar}" Foreground="{DynamicResource AccentForeground}" VerticalAlignment="Center" IsTabStop="False" />
                    </Border>
                </Grid>
            </AdornerDecorator>

            <!-- Main Window -->
            <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    UseLayoutRounding="True" />

            <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="False"
                        Foreground="{DynamicResource AccentForeground}"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Resources>
            <Storyboard x:Key="OverlayFastSemiFadeIn"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard x:Key="OverlayFastSemiFadeOut"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0.0" />
            </Storyboard>
        </ControlTemplate.Resources>

        <ControlTemplate.Triggers>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <Trigger Property="StatusBar" Value="{x:Null}">
                <Setter TargetName="PART_StatusBar" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="WindowResizeGrip" Property="Foreground" Value="{DynamicResource NormalForeground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="WindowState" Value="Maximized" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsTitleOverlay" Value="True">
                <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                <Setter TargetName="Content" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{DynamicResource Transparent}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ModernWindowStyle" TargetType="{x:Type controls:ExtendedWindow}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TitleForeground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="WindowTitleBrush" Value="{DynamicResource Transparent}" />
        <Setter Property="NonActiveBorderBrush">
            <Setter.Value>
                <SolidColorBrush Opacity="{DynamicResource ColorOpacity}" Color="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:ExtendedWindow}, Path=BorderBrush, Converter={StaticResource ObjectToPropertyConverter}, ConverterParameter=Color}" />
            </Setter.Value>
        </Setter>
        <Setter Property="NonActiveWindowTitleBrush">
            <Setter.Value>
                <SolidColorBrush Opacity="{DynamicResource ColorOpacity}" Color="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:ExtendedWindow}, Path=WindowTitleBrush, Converter={StaticResource ObjectToPropertyConverter}, ConverterParameter=Color}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
        <Setter Property="OverlayBrush" Value="{DynamicResource Dark}" />
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="Background" Value="{DynamicResource Light}" />
        <Setter Property="Width" Value="800" />
        <Setter Property="Height" Value="640" />
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template" Value="{StaticResource ExtendedWindowTemplate}" />
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Margin="{StaticResource DefaultMargin}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{Binding}" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" CaptionHeight="0"  />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogWindowStyle" TargetType="{x:Type controls:ExtendedWindow}" BasedOn="{StaticResource ModernWindowStyle}">
        <Setter Property="WindowTitleBrush" Value="{DynamicResource Accent}" />
        <Setter Property="ShowMaxRestoreButton" Value="False" />
        <Setter Property="IsTitleOverlay" Value="False" />
        <Setter Property="ShowIconOnTitleBar" Value="False" />
        <Setter Property="ShowMinButton" Value="False" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
    </Style>

    <Style x:Key="NotificationPopupStyle" TargetType="{x:Type controls:NotificationPopup}">
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Information}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource InformationColor}" Opacity=".35" />
            </Setter.Value>
        </Setter>
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ShowActivated" Value="False" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="Margin" Value="0,50" />
        <Setter Property="MinHeight" Value="70" />
        <Setter Property="Width" Value="600" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NotificationPopup}">
                    <Grid x:Name="Root" Margin="4">
                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Root, Path=IsMouseOver, Mode=OneWay}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0.40" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <controls:Icon x:Name="Icon" Grid.Column="0" Size="Large" Margin="{StaticResource LargeMargin}" Foreground="{TemplateBinding Foreground}" />
                                <StackPanel Grid.Column="1" Orientation="Vertical">
                                    <TextBlock Text="{Binding Title}" VerticalAlignment="Bottom" Margin="{StaticResource LargeMargin}" FontWeight="Bold" FontSize="{DynamicResource MediumFontSize}" />
                                    <TextBlock Text="{Binding Content}" VerticalAlignment="Top" Focusable="False" Margin="{StaticResource LargeHorizontalMargin}" TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static dialog:MessageDialogStyle.Information}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource InformationGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource White}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Information}" />
                            <Setter Property="Background" Value="{DynamicResource Information}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static dialog:MessageDialogStyle.Error}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource ErrorGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource White}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Negative}" />
                            <Setter Property="Background" Value="{DynamicResource Negative}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static dialog:MessageDialogStyle.Warning}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource WarningGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource Black}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Warning}" />
                            <Setter Property="Background" Value="{DynamicResource Warning}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static dialog:MessageDialogStyle.Success}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource SuccessGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource White}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Positive}" />
                            <Setter Property="Background" Value="{DynamicResource Positive}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>