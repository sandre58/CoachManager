<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:converters="clr-namespace:My.CoachManager.Presentation.Prism.Resources.Converters"
                    xmlns:viewModels="clr-namespace:My.CoachManager.Presentation.Prism.Core.ViewModels;assembly=My.CoachManager.Presentation.Prism.Core"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:interfaces="clr-namespace:My.CoachManager.Presentation.Prism.Core.ViewModels.Interfaces;assembly=My.CoachManager.Presentation.Prism.Core"
                    xmlns:strings="clr-namespace:My.CoachManager.CrossCutting.Core.Resources;assembly=My.CoachManager.CrossCutting.Core"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Controls/TextBlock.xaml" />
        <ResourceDictionary Source="../Controls/Icon.xaml" />
        <ResourceDictionary Source="../Controls/ApplicationBar.xaml" />
        <ResourceDictionary Source="../Controls/TextBox.xaml" />
        <ResourceDictionary Source="../Controls/DropDownButton.xaml" />
        <ResourceDictionary Source="../Controls/DataGrid.xaml" />
        <ResourceDictionary Source="../Controls/Badged.xaml" />
        <ResourceDictionary Source="../Specific/Filter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="ListHeaderTemplate" DataType="{x:Type interfaces:IListViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Margin="{StaticResource MediumMargin}">
                <DockPanel parameters:PanelParameters.ItemsMargin="{StaticResource DefaultHorizontalMargin}" VerticalAlignment="Center">

                    <!-- Filters Parameters -->
                    <WrapPanel DockPanel.Dock="Left" VerticalAlignment="Center"
                           Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}">
                        <ContentControl Content="{Binding Filters.SpeedFilter}" Style="{StaticResource SpeedFilterStyle}" Focusable="False" />
                        <Button Content="{x:Static strings:ControlResources.Clear}" Style="{StaticResource SmallButtonStyle}" Command="{Binding Filters.ResetFiltersCommand}" VerticalAlignment="Center" />
                        <controls:Badged x:Name="FiltersBadge" Badge="{Binding Filters.CountActiveFilters}" VerticalAlignment="Center">
                            <Button x:Name="ShowHideFilterButton" Content="{x:Static strings:ControlResources.ShowFilters}" Command="{Binding Filters.ShowFiltersCommand}" Style="{StaticResource SmallButtonStyle}" />
                        </controls:Badged>
                    </WrapPanel>

                    <Rectangle Width="1"
                       VerticalAlignment="Stretch"
                       parameters:PanelParameters.NotAffectMargin="True"
                           Margin="{StaticResource LargeHorizontalMargin}"
                       Fill="{DynamicResource Control}"
                       IsHitTestVisible="False"
                       SnapsToDevicePixels="True"
                       UseLayoutRounding="True"
                           Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}" />

                    <!-- Count Items -->
                    <DockPanel  Margin="{StaticResource DefaultMargin}" DockPanel.Dock="Left" VerticalAlignment="Center" parameters:PanelParameters.NotAffectMargin="True" MinHeight="40">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <TextBlock x:Name="SelectedCountTextBlock"
                                   FontSize="{StaticResource NormalFontSize}"
                                   Text="{Binding SelectedItems.Count, StringFormat={x:Static strings:ControlResources.CountSelectedItemsToUpper}}"
                                   Foreground="{DynamicResource Accent}"
                                   Style="{StaticResource VerySmallHeaderStyle}"
                                   Visibility="{Binding SelectedItems, Converter={StaticResource AnyToVisibilityConverter}}" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="FilteredCountTextBlock"
                                    FontSize="{StaticResource MediumFontSize}" Margin="0"
                                       Text="{Binding Filters.Items.Count}"
                                       Foreground="{DynamicResource Positive}"
                                       Style="{StaticResource VerySmallHeaderStyle}"
                                       Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}" />
                                <TextBlock x:Name="SeparatorCountTextBlock"
                                    FontSize="{StaticResource MediumFontSize}" Margin="0"
                                       Text="/"
                                       Foreground="{DynamicResource Positive}"
                                       Style="{StaticResource VerySmallHeaderStyle}"
                                       Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}" />
                                <TextBlock x:Name="CountTextBlock" Margin="0"
                                       FontSize="{StaticResource MediumFontSize}"
                                       Text="{Binding Items.Count, StringFormat={x:Static strings:ControlResources.CountItemsToUpper}}"
                                       Foreground="{DynamicResource Positive}"
                                       Style="{StaticResource VerySmallHeaderStyle}" />
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>

                    <!-- Columns Parameters -->
                    <WrapPanel DockPanel.Dock="Right" HorizontalAlignment="Right"
                       Visibility="{Binding Parameters, Converter={StaticResource NullToVisibilityConverter}}" VerticalAlignment="Center">
                        <controls:DropDownMenuButton Style="{StaticResource TextDropDownMenuButtonStyle}"
                                                     Content="{x:Static strings:ControlResources.ShowData}"
                                                     ItemsSource="{Binding Parameters.PresetColumns.Keys}">
                            <controls:DropDownMenuButton.ItemContainerStyle>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                    <Setter Property="Header" Value="{Binding Converter={StaticResource EnumToStringConverter}}" />
                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownMenuButton}, Path=DataContext.Parameters.ChangeDisplayedColumnsCommand}" />
                                    <Setter Property="CommandParameter" Value="{Binding }" />
                                </Style>
                            </controls:DropDownMenuButton.ItemContainerStyle>
                        </controls:DropDownMenuButton>
                    </WrapPanel>
                </DockPanel>
            </Grid>

            <!-- Filters Panel -->
            <StackPanel Grid.Row="1" Visibility="{Binding Filters, Converter={StaticResource NullToVisibilityConverter}}">
                <Grid x:Name="FiltersPanel" Background="{DynamicResource LightHeaderBackground}" parameters:PanelParameters.ItemsMargin="{StaticResource FieldMargin}"
                  Visibility="{Binding Filters.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" MaxHeight="300">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <controls:DropDownMenuButton Style="{StaticResource TextDropDownMenuButtonStyle}"
                                                 Content="{x:Static strings:ControlResources.AddCondition}"
                                                 ItemsSource="{Binding Filters.AllowedFilters}">
                        <controls:DropDownMenuButton.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                <Setter Property="Header" Value="{Binding Item2}" />
                                <Setter Property="Command" Value="{Binding DataContext.Filters.AddFilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownMenuButton}}" />
                                <Setter Property="CommandParameter" Value="{Binding }" />
                            </Style>
                        </controls:DropDownMenuButton.ItemContainerStyle>
                    </controls:DropDownMenuButton>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding Filters.Filters}" Focusable="False">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Filters.IsVisible, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter TargetName="ShowHideFilterButton" Property="Content" Value="{x:Static strings:ControlResources.HideFilters}" />
                <Setter TargetName="ShowHideFilterButton" Property="Command" Value="{Binding Filters.HideFiltersCommand}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Filters.Items.Count}" Value="0">
                <Setter TargetName="SeparatorCountTextBlock" Property="Foreground" Value="{DynamicResource Negative}" />
                <Setter TargetName="FilteredCountTextBlock" Property="Foreground" Value="{DynamicResource Negative}" />
                <Setter TargetName="CountTextBlock" Property="Foreground" Value="{DynamicResource Negative}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Filters.CountActiveFilters}" Value="0">
                <Setter TargetName="FiltersBadge" Property="BadgeBackground" Value="{DynamicResource Disabled}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Filters}" Value="{x:Null}">
                <Setter TargetName="CountTextBlock" Property="Text" Value="{Binding Items.Count, StringFormat={x:Static strings:ControlResources.CountItemsToUpper}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ItemHeaderTemplate" DataType="{x:Type interfaces:IListViewModel}">
        <Grid>
        </Grid>
    </DataTemplate>

    <Style x:Key="WorkspaceViewBaseStyle" TargetType="{x:Type controls:WorkspaceView}">
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="ApplicationBarPosition" Value="Bottom" />
        <Setter Property="Padding" Value="5,20,5,5" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource NormalFontFamily}" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="HeaderHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="HeaderBackground" Value="{DynamicResource HeaderBackground}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ApplicationBarStyle" Value="{StaticResource {x:Type controls:ApplicationBar}}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />

        <Setter Property="parameters:ControlParameters.InputBindings">
            <Setter.Value>
                <InputBindingCollection>
                    <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
                </InputBindingCollection>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WorkspaceView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="Column0" />
                            <RowDefinition Height="Auto" x:Name="Column1" />
                            <RowDefinition Height="*" x:Name="Column2" />
                        </Grid.RowDefinitions>

                        <!-- Header -->
                        <Grid Grid.Row="0" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HeaderHeight}" Visibility="{TemplateBinding HeaderTemplate, Converter={StaticResource NullToVisibilityConverter}}">
                            <Border Background="{TemplateBinding HeaderBackground}" Focusable="False">
                                <ContentControl Content="{Binding}" ContentTemplate="{TemplateBinding HeaderTemplate}" VerticalAlignment="Center" />
                            </Border>
                        </Grid>

                        <!-- Commands -->
                        <controls:ApplicationBar x:Name="Commands" Grid.Row="1" Grid.Column="0" ItemsSource="{TemplateBinding Commands}"
                                                 Style="{TemplateBinding ApplicationBarStyle}"
                                                 Visibility="{TemplateBinding Commands, Converter={StaticResource AnyToVisibilityConverter}}" />

                        <!-- Content -->
                        <ScrollViewer x:Name="Content" Grid.Row="2" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Margin="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </ScrollViewer>

                        <!-- Loading -->
                        <Border x:Name="Loader" Grid.Row="2" Background="{DynamicResource DarkControl}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed">
                            <Grid>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <controls:ProgressRing Width="70" Height="70" />
                                    <TextBlock Style="{StaticResource HeaderStyle}" Foreground="{DynamicResource DarkAccent}" Text="{x:Static strings:MessageResources.Loading}" Margin="{StaticResource MediumVerticalMargin}" FontStyle="Italic" Visibility="Collapsed" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="State" Converter="{StaticResource EnumToBooleanConverter}">
                                    <Binding.ConverterParameter>
                                        <converters:EnumCollection>
                                            <x:Static Member="viewModels:ScreenState.Loading" />
                                            <x:Static Member="viewModels:ScreenState.Saving" />
                                        </converters:EnumCollection>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="Loader" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="ApplicationBarPosition" Value="Bottom">
                            <Setter TargetName="Commands" Property="Grid.Row" Value="2" />
                            <Setter TargetName="Loader" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Content" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Column1" Property="Height" Value="*" />
                            <Setter TargetName="Column2" Property="Height" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListWorkspaceViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource WorkspaceViewBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource ListHeaderTemplate}" />

        <Setter Property="parameters:ControlParameters.InputBindings">
            <Setter.Value>
                <InputBindingCollection>
                    <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
                    <KeyBinding Key="N" Modifiers="Control" Command="{Binding AddCommand}" />
                    <KeyBinding Key="F" Modifiers="Control" Command="{Binding Filters.ShowFiltersCommand}" />
                </InputBindingCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ApplicationBarStyle">
            <Setter.Value>
                <Style TargetType="controls:ApplicationBar" BasedOn="{StaticResource {x:Type controls:ApplicationBar}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItems, Converter={StaticResource AnyToBooleanConverter}}" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
                            <Setter Property="BorderThickness" Value="0,3,0,0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemWorkspaceViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource WorkspaceViewBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource ItemHeaderTemplate}" />
    </Style>

    <Style TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource ListWorkspaceViewStyle}" />

    <!-- For dialog window -->
    <DataTemplate x:Key="EditDialogHeaderTemplate" DataType="{x:Type interfaces:IEditViewModel}">
        <Grid>

            <Grid.Resources>
                <Style TargetType="{x:Type controls:Icon}" BasedOn="{StaticResource {x:Type controls:Icon}}">
                    <Setter Property="Foreground" Value="{DynamicResource Dark}" />
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <controls:Icon x:Name="Icon" Width="40" Height="40" Size="Custom" Content="{StaticResource ChevronRightGeometry}" Grid.Column="0" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center"
                            Style="{StaticResource EllipseIconBaseStyle}"
                           OverlayBackground="{DynamicResource Dark}" />
            <TextBlock Grid.Column="1" Text="{Binding Title}" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center" Style="{StaticResource HeaderStyle}" />

            <Grid Grid.Column="2" Visibility="{Binding Mode, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static viewModels:ScreenMode.Edition}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <TextBlock Text="Créé par" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="{Binding Item.CreatedBy}" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="le" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="{Binding Item.CreatedDate, StringFormat={}{0:dd/MM/yyyy}}" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="à" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="{Binding Item.CreatedDate, StringFormat={}{0:HH:mm}}" Style="{StaticResource ReferenceStyle}" />
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <TextBlock Text="Modifié par" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="{Binding Item.ModifiedBy}" Style="{StaticResource ReferenceStyle}" FontWeight="Bold" />
                    <TextBlock Text="le" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="{Binding Item.ModifiedDate, StringFormat={}{0:dd/MM/yyyy}}" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="à" Style="{StaticResource ReferenceStyle}" />
                    <TextBlock Text="{Binding Item.ModifiedDate, StringFormat={}{0:HH:mm}}" Style="{StaticResource ReferenceStyle}" />
                </StackPanel>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Mode}" Value="{x:Static viewModels:ScreenMode.Creation}">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource AddGeometry}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode}" Value="{x:Static viewModels:ScreenMode.Edition}">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource EditPageGeometry}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SelectDialogHeaderTemplate" DataType="{x:Type interfaces:ISelectItemsViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Margin="{StaticResource LargeVerticalMargin}">

                <Grid.Resources>
                    <Style TargetType="{x:Type controls:Icon}" BasedOn="{StaticResource {x:Type controls:Icon}}">
                        <Setter Property="Foreground" Value="{DynamicResource Dark}" />
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <controls:Icon x:Name="Icon" Width="40" Height="40" Size="Custom" Content="{StaticResource AddGeometry}" Grid.Column="0" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center"
                            Style="{StaticResource EllipseIconBaseStyle}"
                           OverlayBackground="{DynamicResource Dark}" />
                <TextBlock Grid.Column="1" Text="{Binding Title}" Margin="{StaticResource MediumHorizontalMargin}" VerticalAlignment="Center" Style="{StaticResource HeaderStyle}" />
            </Grid>
            <Border Grid.Row="1" Background="{DynamicResource LightHeaderBackground}">
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource ListHeaderTemplate}" />
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="EditWorkspaceDialogViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource WorkspaceViewBaseStyle}">
        <Setter Property="HeaderHeight" Value="70" />
        <Setter Property="HeaderTemplate" Value="{StaticResource EditDialogHeaderTemplate}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

        <Setter Property="parameters:ControlParameters.InputBindings">
            <Setter.Value>
                <InputBindingCollection>
                    <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
                    <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
                </InputBindingCollection>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectWorkspaceDialogViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource WorkspaceViewBaseStyle}">
        <Setter Property="HeaderTemplate" Value="{StaticResource SelectDialogHeaderTemplate}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    </Style>
</ResourceDictionary>