<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:strings="clr-namespace:My.CoachManager.CrossCutting.Core.Resources;assembly=My.CoachManager.CrossCutting.Core"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:converters="clr-namespace:My.CoachManager.Presentation.Prism.Resources.Converters"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:strings1="clr-namespace:My.CoachManager.Presentation.Prism.Resources.Strings"
                    xmlns:viewModels="clr-namespace:My.CoachManager.Presentation.Prism.Core.ViewModels;assembly=My.CoachManager.Presentation.Prism.Core"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Controls/TextBlock.xaml" />
        <ResourceDictionary Source="../Controls/Icon.xaml" />
        <ResourceDictionary Source="../Controls/ApplicationBar.xaml" />
        <ResourceDictionary Source="../Controls/TextBox.xaml" />
        <ResourceDictionary Source="../Controls/DropDownButton.xaml" />
        <ResourceDictionary Source="../Controls/DataGrid.xaml" />
        <ResourceDictionary Source="../Controls/Badged.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="DefaultWorkspaceDialogViewHeaderTemplate" DataType="viewModels:WorkspaceDialogViewModel">
        <Grid>

            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderStyle}" />
                <Style TargetType="{x:Type controls:Icon}" BasedOn="{StaticResource {x:Type controls:Icon}}">
                    <Setter Property="Foreground" Value="{DynamicResource HeaderForeground}" />
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <controls:Icon x:Name="Icon" Width="40" Height="40" Size="Custom" Content="{StaticResource ChevronRightGeometry}" Grid.Column="0" Margin="{StaticResource LargeHorizontalMargin}" VerticalAlignment="Center"
                            Style="{StaticResource EllipseIconBaseStyle}"
                           OverlayBackground="{DynamicResource HeaderForeground}" />
            <TextBlock Grid.Column="1" Text="{Binding Title}" Margin="{StaticResource LargeHorizontalMargin}" VerticalAlignment="Center" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Mode}" Value="{x:Static viewModels:ScreenMode.Creation}">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource AddGeometry}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode}" Value="{x:Static viewModels:ScreenMode.Edition}">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource EditGeometry}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FilteredWorkspaceDialogViewHeaderTemplate" DataType="{x:Type viewModels:IFilteredListViewModel}">
        <StackPanel>
            <DockPanel Background="{DynamicResource DarkVariation3}" parameters:PanelParameters.ItemsMargin="{StaticResource DefaultHorizontalMargin}">
                <WrapPanel DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="{StaticResource LargeMargin}">
                    <TextBlock Text="{x:Static strings1:ControlResources.SpeedSearch}" VerticalAlignment="Center" />
                    <TextBox Text="{Binding SpeedFilter.Filter.Value, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource TextBoxBaseStyle}"
                                 Width="{StaticResource MediumWidth}"
                                 CharacterCasing="Upper"
                                 parameters:TextBoxParameters.UseFloatingWatermark="False"
                                 parameters:TextBoxParameters.Watermark="{Binding SpeedFilter.Title}" />
                    <Button Content="{x:Static strings1:ControlResources.Clear}" Command="{Binding ResetFiltersCommand}" />
                    <controls:Badged Badge="{Binding CountActiveFilters}">
                        <Button Content="{x:Static strings1:ControlResources.ShowFilters}" Command="{Binding ShowFiltersCommand}" Style="{StaticResource AccentButtonBaseStyle}" />
                    </controls:Badged>
                </WrapPanel>
            </DockPanel>
            <DockPanel parameters:PanelParameters.ItemsMargin="{StaticResource DefaultHorizontalMargin}">
                <TextBlock VerticalAlignment="Center"
                               parameters:PanelParameters.NotAffectMargin="True"
                               Margin="{StaticResource DefaultMargin}"
                               DataContext="{Binding FilteredItems}"
                               Text="{Binding Count, StringFormat={x:Static strings1:ControlResources.CountItemsToUpper}}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource SmallHeaderStyle}">
                            <Setter Property="Foreground" Value="{DynamicResource Positive}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Count}" Value="0">
                                    <Setter Property="Foreground" Value="{DynamicResource Negative}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Rectangle Width="1"
                               VerticalAlignment="Stretch"
                               parameters:PanelParameters.NotAffectMargin="True"
                               Margin="{StaticResource DefaultVerticalMargin}"
                               Fill="{DynamicResource Control}"
                               IsHitTestVisible="False"
                               SnapsToDevicePixels="True"
                               UseLayoutRounding="True" />
                <WrapPanel Margin="{StaticResource DefaultVerticalMargin}">
                    <controls:DropDownMenuButton Style="{StaticResource HyperLinkDropDownMenuButtonStyle}"
                                                     Content="{x:Static strings1:ControlResources.ShowData}"
                                                     ItemsSource="{Binding PresetColumns.Keys}">
                        <controls:DropDownMenuButton.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                <Setter Property="Header" Value="{Binding Converter={StaticResource EnumToStringConverter}}" />
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext, Converter={StaticResource ObjectToPropertyConverter}, ConverterParameter=ChangeDisplayedColumnsCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding }" />
                            </Style>
                        </controls:DropDownMenuButton.ItemContainerStyle>
                    </controls:DropDownMenuButton>
                    <controls:DropDownMenuButton Style="{StaticResource HyperLinkDropDownMenuButtonStyle}"
                                                     Content="{x:Static strings1:ControlResources.ShowColumns}"
                                                     ItemsSource="{Binding ElementName=ListGrid, Path=Columns}"
                                                     ItemContainerStyle="{StaticResource ColumnContextMenuStyle}" />
                </WrapPanel>
            </DockPanel>
        </StackPanel>
    </DataTemplate>

    <Style TargetType="{x:Type controls:WorkspaceView}">
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource NormalFontFamily}" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="HeaderHeight" Value="100" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ApplicationBarStyle" Value="{StaticResource {x:Type controls:ApplicationBar}}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WorkspaceView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Header -->
                        <Grid Grid.Row="0" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HeaderHeight}" Visibility="{TemplateBinding HeaderTemplate, Converter={StaticResource NullToVisibilityConverter}}">
                            <Border Padding="0,0,0,15" Background="{TemplateBinding HeaderBackground}" Focusable="False">
                                <ContentControl Margin="{StaticResource LargeHorizontalMargin}" Content="{Binding}" ContentTemplate="{TemplateBinding HeaderTemplate}" VerticalAlignment="Bottom" />
                            </Border>
                        </Grid>

                        <!-- Content -->
                        <ScrollViewer Grid.Row="1"  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Margin="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </ScrollViewer>

                        <!-- Loading -->
                        <Border x:Name="Loader"  Grid.Row="1" Background="{DynamicResource LightVariation4}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed">
                            <Grid>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <controls:ProgressRing Width="70" Height="70" />
                                    <TextBlock Style="{StaticResource HeaderStyle}" Foreground="{DynamicResource DarkAccent}" Text="{x:Static strings:MessageResources.Loading}" Margin="{StaticResource LargeVerticalMargin}" FontStyle="Italic" Visibility="Collapsed" />
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!-- Commands -->
                        <controls:ApplicationBar Grid.Row="2" Grid.Column="0" ItemsSource="{TemplateBinding Commands}" Style="{TemplateBinding ApplicationBarStyle}" Visibility="{TemplateBinding Commands, Converter={StaticResource AnyToVisibilityConverter}}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="State" Converter="{StaticResource EnumToBooleanConverter}">
                                    <Binding.ConverterParameter>
                                        <converters:EnumCollection>
                                            <x:Static Member="viewModels:ScreenState.Loading" />
                                            <x:Static Member="viewModels:ScreenState.Saving" />
                                        </converters:EnumCollection>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="Loader" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WorkspaceDialogViewStyle" TargetType="{x:Type controls:WorkspaceView}" BasedOn="{StaticResource {x:Type controls:WorkspaceView}}">
        <Setter Property="HeaderHeight" Value="70" />
        <Setter Property="HeaderBackground" Value="{DynamicResource DarkVariation1}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource DefaultWorkspaceDialogViewHeaderTemplate}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    </Style>
</ResourceDictionary>