<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:behaviours="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Behaviours;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:global="clr-namespace:My.CoachManager.Presentation.Prism.Core.Commands;assembly=My.CoachManager.Presentation.Prism.Core">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Base/Sizes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Storyboard x:Key="ScaleYUp">
        <DoubleAnimation From="0" To="1" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" />
    </Storyboard>
    <Storyboard x:Key="ScaleYDown">
        <DoubleAnimation From="1" To="0" Duration="0:0:0.25" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" />
    </Storyboard>
    <Storyboard x:Key="ScaleXLeft">
        <DoubleAnimation From="0" To="{StaticResource LargeHeight}" Duration="0:0:0.1" Storyboard.TargetName="OverlayBorder" Storyboard.TargetProperty="Width" />
    </Storyboard>
    <Storyboard x:Key="ScaleXRight">
        <DoubleAnimation From="{StaticResource LargeHeight}" To="0" Duration="0:0:0.1" Storyboard.TargetName="OverlayBorder" Storyboard.TargetProperty="Width" />
    </Storyboard>

    <!--Toggle Button -->
    <Style x:Key="NavigationExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Background="Transparent">
                        <DockPanel SnapsToDevicePixels="False">
                            <!-- Header content -->
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="True"
                                              VerticalAlignment="Stretch" />

                            <!--Bouton pour plier et déplier-->
                            <Viewbox x:Name="ViewBoxToggleButton" Width="15" Height="15" Margin="0,0,20,0" DockPanel.Dock="Right"
                                     HorizontalAlignment="Right" VerticalAlignment="Center">
                                <Path x:Name="PictoToggleButton"
                                      Data="{StaticResource PlusGeometry}"
                                      Width="15" Height="15"
                                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:NavigationExpander}}" />
                            </Viewbox>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PictoToggleButton" Property="Data" Value="{StaticResource MinusGeometry}" />
                            <Setter TargetName="ViewBoxToggleButton" Property="Margin" Value="0 12 20 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Header Template -->
    <DataTemplate x:Key="NavigationExpanderHeaderTemplate" DataType="controls:NavigationExpander">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Width="{DynamicResource LargeHeight}">
                <Border  x:Name="OverlayBorder" Background="{Binding Path=Color, RelativeSource={RelativeSource AncestorType={x:Type controls:NavigationExpander}}}" HorizontalAlignment="Left" />
            </Border>
            <controls:Icon Grid.Column="0" x:Name="Icon" Size="Medium"
                                       Content="{Binding Path=Icon, RelativeSource={RelativeSource AncestorType={x:Type controls:NavigationExpander}}}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:NavigationExpander}}}"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" />
            <TextBlock Grid.Column="1" x:Name="Header"
                                   Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type controls:NavigationExpander}}, Converter={StaticResource ToUpperConverter}}"
                                   FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type controls:NavigationExpander}}}"
                                   VerticalAlignment="Center" Margin="{StaticResource MediumHorizontalMargin}" />
        </Grid>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:NavigationExpander}}" Value="True" />
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:NavigationExpander}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ScaleXLeft}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource ScaleXRight}" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:NavigationExpander}}" Value="True">
                <Setter TargetName="Header" Property="Foreground" Value="{Binding Path=Color, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:NavigationExpander}}" />
                <Setter TargetName="Icon" Property="Foreground" Value="{Binding Path=Color, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:NavigationExpander}}" />
                <Setter TargetName="Header" Property="FontWeight" Value="Bold" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Templates -->
    <ControlTemplate x:Key="NavigationExpanderTemplate" TargetType="{x:Type controls:NavigationExpander}">
        <Border BorderBrush="{TemplateBinding Color}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          Content="{TemplateBinding Header}"
                                          DockPanel.Dock="Top"
                                          Focusable="{TemplateBinding IsExpanded, Converter={StaticResource NotConverter}}"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          MinWidth="0" MinHeight="0" Height="{DynamicResource LargeHeight}" Style="{StaticResource NavigationExpanderToggleButtonStyle}"/>
                <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ScaleYUp}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource ScaleYDown}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NavigationItemTemplate" TargetType="controls:NavigationItem">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Color}" BorderThickness="{TemplateBinding BorderThickness}" Height="{DynamicResource LargeHeight}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Width="{DynamicResource LargeHeight}">
                    <Border  x:Name="OverlayBorder" Background="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" />
                </Border>
                <controls:Icon Grid.Column="0" x:Name="Icon" Size="Medium"
                                       Content="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" />
                <TextBlock Grid.Column="1" x:Name="Header"
                                   Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToUpperConverter}}"
                                   FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   VerticalAlignment="Center" Margin="{StaticResource MediumHorizontalMargin}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ScaleXLeft}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource ScaleXRight}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NavigationItemLevel2Template" TargetType="{x:Type controls:NavigationItem}">
        <Border x:Name="border"
                Height="{DynamicResource SmallLargeHeight}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuForeground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" />
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Style -->
    <Style TargetType="{x:Type controls:NavigationItem}">
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForeground}" />
        <Setter Property="Background" Value="{DynamicResource AccentControl}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuForeground}" />
        <Setter Property="Color" Value="{DynamicResource Accent}" />
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="4,0,0,0" />
        <Setter Property="Cursor" Value="{x:Static Cursors.Hand}" />
        <Setter Property="Template" Value="{StaticResource NavigationItemTemplate}" />
        <Setter Property="Command" Value="{x:Static global:GlobalCommands.NavigateCommand}" />
        <Setter Property="CommandParameter" Value="{Binding Target, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="NavigationItemStyle" TargetType="{x:Type controls:NavigationItem}" BasedOn="{StaticResource {x:Type controls:NavigationItem}}" />

    <Style x:Key="NavigationItemLevel2Style" TargetType="{x:Type controls:NavigationItem}" BasedOn="{StaticResource NavigationItemStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource LightMenuForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="30,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource NavigationItemLevel2Template}" />
    </Style>

    <Style TargetType="{x:Type controls:NavigationExpander}">
        <Style.Resources>
            <Style TargetType="{x:Type controls:NavigationItem}" BasedOn="{StaticResource NavigationItemLevel2Style}" />
        </Style.Resources>

        <Setter Property="behaviours:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <behaviours:StylizedBehaviorCollection>
                    <behaviours:MainMenuExpanderBehavior IsMenuDisplayed="{Binding DataContext.IsMenuExpended, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:ExtendedWindow}}" />
                </behaviours:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>

        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForeground}" />
        <Setter Property="Background" Value="{DynamicResource AccentControl}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuForeground}" />
        <Setter Property="Color" Value="{DynamicResource Accent}" />
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="4,0,0,0" />
        <Setter Property="Cursor" Value="{x:Static Cursors.Hand}" />
        <Setter Property="Template" Value="{StaticResource NavigationExpanderTemplate}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource NavigationExpanderHeaderTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="NavigationExpanderStyle" TargetType="{x:Type controls:NavigationExpander}" BasedOn="{StaticResource {x:Type controls:NavigationExpander}}" />
</ResourceDictionary>