<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:wpf="clr-namespace:My.CoachManager.Presentation.Prism.Core.Notification;assembly=My.CoachManager.Presentation.Prism.Core">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type wpf:NotificationContent}" x:Key="DefaultNotificationTemplate">
        <Border x:Name="Border" Padding="12" MinHeight="80">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <controls:Icon  x:Name="Icon" Margin="0,0,12,0" Size="Custom" Width="25" Height="25" VerticalAlignment="Top" Opacity="0.85" />
                <DockPanel Grid.Column="1">
                    <TextBlock x:Name="Title" DockPanel.Dock="Top" Text="{Binding Title}" Style="{StaticResource MediumHeaderStyle}" />
                    <TextBlock x:Name="Message" Text="{Binding Message}" TextWrapping="Wrap" Margin="0,0,12,0" Opacity="0.75" />
                </DockPanel>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Information">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource InformationGeometry}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Information}" />
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Message" Property="Foreground" Value="{DynamicResource White}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Success">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource SuccessGeometry}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Positive}" />
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Message" Property="Foreground" Value="{DynamicResource White}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Warning">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource WarningGeometry}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Warning}" />
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Message" Property="Foreground" Value="{DynamicResource White}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Error">
                <Setter TargetName="Icon" Property="Content" Value="{StaticResource ErrorGeometry}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Negative}" />
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource White}" />
                <Setter TargetName="Message" Property="Foreground" Value="{DynamicResource White}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="NotificationTemplate" TargetType="{x:Type controls:Toast}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="8,8,0,0">
            <Grid>
                <ContentPresenter />
                <Button x:Name="PART_CloseButton" Style="{StaticResource IconButtonStyle}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Width="{StaticResource SmallDiameter}"
                        Height="{StaticResource SmallDiameter}"
                        Content="{StaticResource CancelGeometry}"
                        Margin="{StaticResource DefaultMargin}"
                        Opacity=".8" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" To="1" Duration="0:0:.2" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" To="1" Duration="0:0:.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="controls:Toast.NotificationCloseInvoked">
                <BeginStoryboard>
                    <Storyboard Duration="0:0:.1">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="1" To="0.1" Duration="0:0:.2" />
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard BeginTime="0:0:.2">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="1" To="0" Duration="0:0:.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:Toast}">
        <!--<Setter Property="Height" Value="100" />-->
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Width" Value="350" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Background" Value="{DynamicResource Light}" />
        <Setter Property="Foreground" Value="{DynamicResource Dark}" />
        <Setter Property="Template" Value="{StaticResource NotificationTemplate}" />
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultNotificationTemplate}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Opacity=".25" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ToastArea}">
        <Setter Property="Margin" Value="0,0,8,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToastArea}">
                    <controls:ReversibleStackPanel x:Name="PART_Items" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="TopLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                        <Trigger Property="Position" Value="TopRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <Trigger Property="Position" Value="BottomLeft">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True" />
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                        <Trigger Property="Position" Value="BottomRight">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True" />
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>