<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Base/Fonts.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Controls/ListBox.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!--<DataTemplate x:Key="PositionTemplate" DataType="models:PositionModel">
        <Grid ToolTip="{Binding Label}">
            <TextBlock Text="{Binding Code}" Margin="0" />
        </Grid>
    </DataTemplate>-->
    
    <ControlTemplate x:Key="PositionTemplate" TargetType="CheckBox">
        <Grid RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" >
            <controls:Icon Content="{StaticResource ClothesGeometry}" Foreground="{TemplateBinding Background}" 
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Height="{Binding ItemHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:PositionsSelector}}}"
                       Width="{Binding ItemHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:PositionsSelector}}}"/>
        <ContentPresenter Margin="{TemplateBinding Padding}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
    </ControlTemplate>

    <Style x:Key="PositionStyle" TargetType="{x:Type controls:SelectorItem}">
        <Setter Property="Background" Value="{DynamicResource Light}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="parameters:ControlParameters.FocusBackground" Value="{DynamicResource Accent}" />
        <Setter Property="parameters:ControlParameters.FocusForeground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Grid.Row" Value="{Binding Row}" />
        <Setter Property="Grid.Column" Value="{Binding Column}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SelectorItem}">
                    <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Code}" ToolTip="{Binding Label}" 
                              Background="{TemplateBinding Background}"
                              Foreground="{TemplateBinding Foreground}"
                              Padding="{TemplateBinding Padding}"
                              Template="{StaticResource PositionTemplate}" 
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource ColorOpacity}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusForeground)}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusForeground)}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusForeground)}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" Value="{DynamicResource ColorOpacity}" />
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusBackground)}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(parameters:ControlParameters.FocusForeground)}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:PositionsSelector}">
        <Setter Property="Height" Value="400" />
        <Setter Property="Width" Value="280" />
        <Setter Property="ItemHeight" Value="50" />
        <Setter Property="FontSize" Value="{StaticResource MidSmallFontSize}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Stretch="UniformToFill" ImageSource="../../Pictures/ground.jpg"/>
            </Setter.Value>
            </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource Dark}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource PositionStyle}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid parameters:GridParameters.RowCount="7"
                          parameters:GridParameters.ColumnCount="3"
                          IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PositionsSelector}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>