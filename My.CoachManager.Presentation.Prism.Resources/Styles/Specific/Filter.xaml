<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:filters="clr-namespace:My.CoachManager.Presentation.Prism.Core.Filters;assembly=My.CoachManager.Presentation.Prism.Core"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:screens="clr-namespace:My.CoachManager.Presentation.Prism.Core.ViewModels.Screens;assembly=My.CoachManager.Presentation.Prism.Core"
                    xmlns:extensions="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Extensions;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:resources="clr-namespace:My.CoachManager.CrossCutting.Core.Resources;assembly=My.CoachManager.CrossCutting.Core"
                    xmlns:strings="clr-namespace:My.CoachManager.Presentation.Prism.Resources.Strings">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Controls/TextBox.xaml" />
        <ResourceDictionary Source="../Controls/NumericUpDown.xaml" />
        <ResourceDictionary Source="../Controls/Combobox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type screens:FilterViewModel}">
        <Grid Background="{DynamicResource DarkVariation3}" Margin="{StaticResource SmallVerticalMargin}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Column="0" x:Name="IsEnabled" IsChecked="{Binding IsEnabled}" HorizontalAlignment="Center" />
            <ComboBox Grid.Column="1"
                      HorizontalAlignment="Center" Style="{StaticResource ComboBoxStyle}"
                      Width="60"
                      IsEnabled="{Binding ElementName=IsEnabled, Path=IsChecked}"
                      ItemsSource="{Binding Source={extensions:Enum {x:Type filters:LogicalOperator}}}"
                      DisplayMemberPath="Display" SelectedValuePath="Value" SelectedValue="{Binding Operator, Mode=TwoWay}" />
            <TextBlock Grid.Column="2" Text="{Binding Title}" IsEnabled="{Binding ElementName=IsEnabled, Path=IsChecked}" />
            <ContentControl Grid.Column="3" Content="{Binding Filter}" IsEnabled="{Binding ElementName=IsEnabled, Path=IsChecked}" />
            <Button Grid.Column="4"
                    Style="{StaticResource RemoveButtonStyle}"
                    Width="18" Height="18"
                    ToolTip="{x:Static strings:ControlResources.RemoveCondition}"
                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.RemoveFilterCommand}"
                    CommandParameter="{Binding Filter}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type filters:StringFilter}">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ComboBox Grid.Column="0" Grid.Row="0"
                      HorizontalAlignment="Center" Style="{StaticResource ComboBoxStyle}"
                      Width="125"
                      ItemsSource="{Binding Source={extensions:Enum {x:Type filters:StringOperator}}}"
                      DisplayMemberPath="Display" SelectedValuePath="Value" SelectedValue="{Binding Operator, Mode=TwoWay}" />
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Width="{StaticResource MediumWidth}" Style="{StaticResource TextBoxBaseStyle}" />
            <CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding CaseSensitive}" Content="{x:Static strings:ControlResources.CaseSensitive}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type filters:IntegerFilter}">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Column="0"
                      HorizontalAlignment="Center" Style="{StaticResource ComboBoxStyle}"
                      Width="125"
                      ItemsSource="{Binding Source={extensions:Enum {x:Type filters:ComparableOperator}}}"
                      DisplayMemberPath="Display" SelectedValuePath="Value" SelectedValue="{Binding Operator, Mode=TwoWay}" />
            <controls:ExtendedNumericUpDown x:Name="From" Grid.Column="1"
                                            Value="{Binding From}"
                                            Width="{StaticResource MidSmallWidth}"
                                            Style="{StaticResource ExtendedNumericUpDownBaseStyle}" />
            <TextBlock x:Name="And" Grid.Column="2" Text="{x:Static resources:GlobalResources.And}" />
            <controls:ExtendedNumericUpDown x:Name="To" Grid.Column="3" Value="{Binding To}" Width="{StaticResource MidSmallWidth}" Style="{StaticResource ExtendedNumericUpDownBaseStyle}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Operator}" Value="{x:Static filters:ComparableOperator.EqualsTo}">
                <Setter TargetName="And" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="To" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Operator}" Value="{x:Static filters:ComparableOperator.GreaterEqualThan}">
                <Setter TargetName="And" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="To" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Operator}" Value="{x:Static filters:ComparableOperator.GreaterThan}">
                <Setter TargetName="And" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="To" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Operator}" Value="{x:Static filters:ComparableOperator.LessEqualThan}">
                <Setter TargetName="And" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="From" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Operator}" Value="{x:Static filters:ComparableOperator.LessThan}">
                <Setter TargetName="And" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="From" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Operator}" Value="{x:Static filters:ComparableOperator.NotEqualsTo}">
                <Setter TargetName="And" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="To" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type filters:SelectedLabelableFilter}">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Column="0"
                      HorizontalAlignment="Center" Style="{StaticResource ComboBoxStyle}"
                      Width="125"
                      ItemsSource="{Binding Source={extensions:Enum {x:Type filters:BinaryOperator}}}"
                      DisplayMemberPath="Display" SelectedValuePath="Value" SelectedValue="{Binding Operator, Mode=TwoWay}" />
            <ComboBox Grid.Column="1" Width="{StaticResource MidSmallWidth}"
                      HorizontalAlignment="Center" Style="{StaticResource ComboBoxStyle}"
                      ItemsSource="{Binding AllowedValues}"
                      DisplayMemberPath="Label" SelectedValuePath="Id" SelectedValue="{Binding Value}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type filters:SelectedLabelablesFilter}">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox Grid.Column="0"
                      HorizontalAlignment="Center" Style="{StaticResource ComboBoxStyle}"
                      Width="125"
                      ItemsSource="{Binding Source={extensions:Enum {x:Type filters:BinaryOperator}}}"
                      DisplayMemberPath="Display" SelectedValuePath="Value" SelectedValue="{Binding Operator, Mode=TwoWay}" />
            <controls:MultiComboBox Grid.Column="1" Width="{StaticResource SmallLargeWidth}"
                      HorizontalAlignment="Center" Style="{StaticResource MultiComboBoxStyle}"
                      ItemsSource="{Binding AllowedValues}"
                      DisplayMemberPath="Label" ValueMemberPath="Id" SelectedValues="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>