<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:params="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Fonts.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Tab Item -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkGray}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ControlDarkGray}" />
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="FontStretch" Value="Medium" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Padding" Value="{StaticResource LargeMargin}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="params:TabControlParameters.IndicatorBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},Path=(params:TabControlParameters.IndicatorBrush)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid TextBlock.Foreground="{TemplateBinding Foreground}"
                              TextBlock.FontFamily="{TemplateBinding Control.FontFamily}"
                              TextBlock.FontSize="{TemplateBinding FontSize}"
                              TextBlock.FontStretch="{TemplateBinding FontStretch}"
                              TextBlock.FontStyle="{TemplateBinding FontStyle}"
                              TextBlock.FontWeight="{TemplateBinding FontWeight}"
                              TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                              TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                              RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <Rectangle x:Name="Indicator"
                                       StrokeThickness="0"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"
                                       Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}},Path=(params:TabControlParameters.IndicatorBrush)}"
                                       Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}},Path=(params:TabControlParameters.IndicatorThickness)}" />
                            <ContentPresenter  x:Name="ContentSite" ContentSource="Header" Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                               TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                                               TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                               RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="{x:Static Dock.Bottom}" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}},Path=TabStripPlacement}">
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <DataTrigger Value="{x:Static Dock.Left}" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}},Path=TabStripPlacement}">
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                            <Setter Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Bottom" />
                        </DataTrigger>
                        <DataTrigger Value="{x:Static Dock.Right}" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}},Path=TabStripPlacement}">
                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                            <Setter Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Bottom" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=FontSize,Mode=OneWay,Converter={StaticResource IsGreaterThanConverter},ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
            <DataTrigger Value="{x:Static Dock.Left}" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}},Path=TabStripPlacement}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
            <DataTrigger Value="{x:Static Dock.Right}" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}},Path=TabStripPlacement}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=FontSize,Mode=OneWay,Converter={StaticResource IsGreaterThanConverter},ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverDarkGray}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseOverDarkGray}" />
                <Setter Property="params:TabControlParameters.IndicatorBrush" Value="{DynamicResource ControlMouseOverDarkGray}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
                <Setter Property="params:TabControlParameters.IndicatorBrush" Value="{DynamicResource Accent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource Disabled}" />
                <Setter Property="Foreground" Value="{DynamicResource Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Tab Control -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkGray}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="params:TabControlParameters.IndicatorBrush" Value="{DynamicResource ControlDarkGray}" />
        <Setter Property="params:TabControlParameters.IndicatorThickness" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontStretch" Value="Medium" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            TextBlock.FontFamily="{TemplateBinding Control.FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontStretch="{TemplateBinding FontStretch}"
                            TextBlock.FontStyle="{TemplateBinding FontStyle}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                            TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                            RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                            KeyboardNavigation.DirectionalNavigation="Local"
                            ClipToBounds="{TemplateBinding UIElement.ClipToBounds}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="FirstColumnDefinition" Width="*" />
                                <ColumnDefinition x:Name="SecondColumnDefinition" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="FirstRowDefinition" Height="Auto" />
                                <RowDefinition x:Name="SecondRowDefinition" Height="*" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Indicator" Grid.Column="0" Grid.Row="0" Fill="{TemplateBinding params:TabControlParameters.IndicatorBrush}" Height="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(params:TabControlParameters.IndicatorThickness)}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
                            <TabPanel x:Name="HeaderPanel" Grid.Column="0" Grid.Row="0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" />
                            <Border x:Name="ContentPanel"
                                        Grid.Column="0"
                                        Grid.Row="1"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local"
                                        Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.Background)}"
                                        BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.BorderBrush)}"
                                        BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.BorderThickness)}"
                                        TextBlock.Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.Foreground)}"
                                        TextBlock.FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.FontFamily)}"
                                        TextBlock.FontSize="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.FontSize)}"
                                        TextBlock.FontStretch="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.FontStretch)}"
                                        TextBlock.FontStyle="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.FontStyle)}"
                                        TextBlock.FontWeight="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.FontWeight)}"
                                        TextOptions.TextFormattingMode="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TextOptions.TextFormattingMode)}"
                                        TextOptions.TextRenderingMode="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TextOptions.TextRenderingMode)}"
                                        RenderOptions.ClearTypeHint="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(RenderOptions.ClearTypeHint)}">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                              ContentSource="SelectedContent"
                                                              Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.Padding)}"
                                                              HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.HorizontalContentAlignment),Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                                              VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem.(TabItem.VerticalContentAlignment),Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="FirstRowDefinition" Property="Height" Value="*" />
                            <Setter TargetName="SecondRowDefinition" Property="Height" Value="Auto" />
                            <Setter TargetName="Indicator" Property="Grid.Row" Value="1" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="FirstColumnDefinition" Property="Width" Value="Auto" />
                            <Setter TargetName="SecondColumnDefinition" Property="Width" Value="*" />
                            <Setter TargetName="FirstRowDefinition" Property="Height" Value="*" />
                            <Setter TargetName="SecondRowDefinition" Property="Height" Value="0" />
                            <Setter TargetName="Indicator" Property="Grid.Column" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Indicator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Indicator" Value="{Binding RelativeSource={RelativeSource Self},Path=(params:TabControlParameters.IndicatorThickness)}" Property="Width" />
                            <Setter TargetName="Indicator" Property="Height" Value="NaN" />
                            <Setter TargetName="Indicator" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Stretch" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="FirstColumnDefinition" Property="Width" Value="*" />
                            <Setter TargetName="SecondColumnDefinition" Property="Width" Value="Auto" />
                            <Setter TargetName="FirstRowDefinition" Property="Height" Value="*" />
                            <Setter TargetName="SecondRowDefinition" Property="Height" Value="0" />
                            <Setter TargetName="Indicator" Property="Grid.Column" Value="1" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Indicator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Indicator" Value="{Binding RelativeSource={RelativeSource Self},Path=(params:TabControlParameters.IndicatorThickness)}" Property="Width" />
                            <Setter TargetName="Indicator" Property="Height" Value="NaN" />
                            <Setter TargetName="Indicator" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Indicator" Property="VerticalAlignment" Value="Stretch" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=FontSize,Mode=OneWay,Converter={StaticResource IsGreaterThanConverter},ConverterParameter=18}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource Disabled}" />
                <Setter Property="Foreground" Value="{DynamicResource Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>