<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Sizes.xaml" />
        <ResourceDictionary Source="../Base/Shadows.xaml" />
        <ResourceDictionary Source="CommandButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="parameters:ControlParameters.ContentCharacterCasing" Value="Normal">
                            <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" />
                        </Trigger>
                        <Trigger Property="parameters:ControlParameters.ContentCharacterCasing" Value="Upper">
                            <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={StaticResource ToUpperConverter}}" />
                        </Trigger>
                        <Trigger Property="parameters:ControlParameters.ContentCharacterCasing" Value="Lower">
                            <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={StaticResource ToLowerConverter}}" />
                        </Trigger>
                        <Trigger Property="parameters:ControlParameters.ContentCharacterCasing" Value="Lower">
                            <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={StaticResource ToLowerConverter}}" />
                        </Trigger>
                        <Trigger Property="parameters:ControlParameters.ContentCharacterCasing" Value="FirstLetterUpper">
                            <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={StaticResource ToFirstLetterUpperConverter}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StateEllipseStyle" TargetType="Ellipse">
        <Setter Property="Stroke" Value="{DynamicResource AccentForeground}" />
        <Setter Property="Fill" Value="{DynamicResource ControlDarkGray}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:StateContent}, Path=Diameter}" />
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:StateContent}, Path=Diameter}" />
        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:StateContent}, Path=Padding}" />
    </Style>

    <Style x:Key="Test" TargetType="{x:Type controls:StateContent}">
        <Setter Property="Diameter" Value="{StaticResource VerySmallDiameter}" />
        <Setter Property="Padding" Value="{StaticResource SmallHorizontalMargin}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:StateContent">
                    <StackPanel Orientation="Horizontal" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=State, Converter={StaticResource EnumToStringConverter}}">
                        <Ellipse x:Name="Ellipse1" Style="{StaticResource StateEllipseStyle}" Opacity="0.25" />
                        <Ellipse x:Name="Ellipse2" Style="{StaticResource StateEllipseStyle}" Opacity="0.5" />
                        <Ellipse x:Name="Ellipse3" Style="{StaticResource StateEllipseStyle}" Opacity="0.75" />
                        <Ellipse x:Name="Ellipse4" Style="{StaticResource StateEllipseStyle}" Opacity="1" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=State, RelativeSource={RelativeSource Self}, Converter={StaticResource EnumToIntegerConverter}}" Value="1">
                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource Positive}" />
                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource Positive}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State, RelativeSource={RelativeSource Self}, Converter={StaticResource EnumToIntegerConverter}}" Value="2">
                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource Positive}" />
                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource Positive}" />
                            <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource Positive}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State, RelativeSource={RelativeSource Self}, Converter={StaticResource EnumToIntegerConverter}}" Value="3">
                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource Positive}" />
                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource Positive}" />
                            <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource Positive}" />
                            <Setter TargetName="Ellipse4" Property="Fill" Value="{DynamicResource Positive}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>