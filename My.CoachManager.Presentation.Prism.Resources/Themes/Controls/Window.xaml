<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:strings="clr-namespace:My.CoachManager.Presentation.Prism.Resources.Strings"
                    xmlns:enums="clr-namespace:My.CoachManager.Presentation.Prism.Core.Interactivity;assembly=My.CoachManager.Presentation.Prism.Core">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="TextBlock.xaml" />
        <ResourceDictionary Source="Icon.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ModernWindowTitle" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="FontSize" Value="{DynamicResource WindowHeaderFontSize}" />
    </Style>

    <Style x:Key="ModernWindowStyle" TargetType="{x:Type controls:MetroWindow}">
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="Background" Value="{DynamicResource Light}" />
        <Setter Property="HeaderBackground" Value="{DynamicResource WindowHeaderBackground}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource WindowHeaderForeground}" />
        <Setter Property="Width" Value="800" />
        <Setter Property="Height" Value="640" />
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="IsTitleVisible" Value="True" />
        <Setter Property="IconAlignment" Value="Left" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MetroWindow">
                    <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" Background="{TemplateBinding Background}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <AdornerDecorator>
                                <Grid x:Name="LayoutRoot">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <!-- content -->
                                    <ContentPresenter x:Name="Content" Grid.Row="1" />

                                    <!-- title bar -->
                                    <Grid x:Name="Header" Grid.Row="0" Opacity="0.9" Background="{TemplateBinding HeaderBackground}" Visibility="{TemplateBinding IsTitleBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!-- Icon -->
                                        <Border x:Name="Icon" Grid.Column="0" Background="{DynamicResource Accent}" Width="{DynamicResource SystemButtonHeight}" Height="{DynamicResource SystemButtonHeight}"
                                                DataContext="{TemplateBinding Icon}"
                                                Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                                            <Image Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding}" />
                                        </Border>

                                        <!-- title -->
                                        <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" Margin="{StaticResource LargeHorizontalMargin}" VerticalAlignment="Center" Style="{StaticResource ModernWindowTitle}"
                                                   DataContext="{TemplateBinding IsTitleVisible}"
                                                   Foreground="{TemplateBinding HeaderForeground}"
                                                   Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}}" />

                                        <!-- window system buttons-->
                                        <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Button Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                                                    ToolTip="{x:Static strings:ControlResources.Minimize}"
                                                    Style="{StaticResource SystemButtonStyle}"
                                                    Foreground="{TemplateBinding HeaderForeground}"
                                                    Visibility="{TemplateBinding IsMinimizeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Button.Content>
                                                    <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            <Grid Margin="1,0,1,0">
                                                <Button x:Name="Restore" Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                                                        ToolTip="{x:Static strings:ControlResources.Restore}"
                                                        Foreground="{TemplateBinding HeaderForeground}"
                                                        Style="{StaticResource SystemButtonStyle}" Visibility="Collapsed">
                                                    <Button.Content>
                                                        <Grid Width="13" Height="12" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                                                            <Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1" />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button x:Name="Maximize" Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                                                        ToolTip="{x:Static strings:ControlResources.Maximize}"
                                                        Style="{StaticResource SystemButtonStyle}"
                                                        Foreground="{TemplateBinding HeaderForeground}"
                                                        Visibility="{TemplateBinding IsMaximizeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Button.Content>
                                                        <Grid Width="13" Height="12">
                                                            <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                            <Button Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                                                    ToolTip="{x:Static strings:ControlResources.Close}"
                                                    Style="{StaticResource SystemCloseButtonStyle}"
                                                    Foreground="{TemplateBinding HeaderForeground}"
                                                    Visibility="{TemplateBinding IsCloseButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Button.Content>
                                                    <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5" />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </Grid>

                                    <!-- Status Bar -->
                                    <Border x:Name="StatusBar" Grid.Row="2" Background="{DynamicResource StatusBarBackground}" Height="{DynamicResource StatusBarHeight}" Focusable="False">
                                        <ContentControl Content="{TemplateBinding StatusBar}" Foreground="{DynamicResource StatusBarForeground}" VerticalAlignment="Center" IsTabStop="False" />
                                    </Border>

                                    <!-- resize grip -->
                                    <Grid Grid.Row="2" x:Name="ResizeGrip" Background="Transparent" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" WindowChrome.ResizeGripDirection="BottomRight">
                                        <Path x:Name="Grip" Width="12" Height="12" Margin="1"
                                              Stroke="{DynamicResource AccentForeground}"
                                              StrokeThickness="1"
                                              Stretch="None"
                                              Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                    </Grid>
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="StatusBar" Value="{x:Null}">
                            <Setter TargetName="StatusBar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Grip" Property="Stroke" Value="{DynamicResource NormalForeground}" />
                            <Setter TargetName="Content" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <Trigger Property="IconAlignment" Value="Right">
                            <Setter TargetName="Icon" Property="Grid.Column" Value="2" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderActive}" />
                            <Setter TargetName="Header" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized" />
                                <Condition Property="IsMaximizeButtonVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                                <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal" />
                                <Condition Property="IsMaximizeButtonVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsTitleOverlay" Value="True">
                            <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Content" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogWindowStyle" TargetType="{x:Type controls:MetroWindow}" BasedOn="{StaticResource ModernWindowStyle}">
        <Setter Property="IsMaximizeButtonVisible" Value="False" />
        <Setter Property="IsMinimizeButtonVisible" Value="False" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="HeaderBackground" Value="{DynamicResource Light}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource Dark}" />
        <Setter Property="Height" Value="240" />
        <Setter Property="Width" Value="550" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="80" />
    </Style>

    <Style x:Key="NotificationPopupStyle" TargetType="{x:Type controls:NotificationPopup}">
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource NormalForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Information}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource InformationColor}" Opacity=".35" />
            </Setter.Value>
        </Setter>
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="ShowActivated" Value="False" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="Margin" Value="0,50" />
        <Setter Property="MinHeight" Value="70" />
        <Setter Property="Width" Value="600" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NotificationPopup}">
                    <Grid x:Name="Root" Margin="4">
                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Root, Path=IsMouseOver, Mode=OneWay}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0.40" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <controls:Icon x:Name="Icon" Grid.Column="0" Size="Large" Margin="{StaticResource LargeMargin}" Foreground="{TemplateBinding Foreground}" />
                                <StackPanel Grid.Column="1" Orientation="Vertical">
                                    <TextBlock Text="{Binding Title}" VerticalAlignment="Bottom" Margin="{StaticResource LargeMargin}" FontWeight="Bold" FontSize="{DynamicResource MediumFontSize}" />
                                    <TextBlock Text="{Binding Content}" VerticalAlignment="Top" Focusable="False" Margin="{StaticResource LargeHorizontalMargin}" TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessageDialogStyle.Information}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource InformationGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource White}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Information}" />
                            <Setter Property="Background" Value="{DynamicResource Information}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessageDialogStyle.Error}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource ErrorGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource White}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Negative}" />
                            <Setter Property="Background" Value="{DynamicResource Negative}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessageDialogStyle.Warning}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource WarningGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource Black}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Warning}" />
                            <Setter Property="Background" Value="{DynamicResource Warning}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Style}" Value="{x:Static enums:MessageDialogStyle.Success}">
                            <Setter TargetName="Icon" Property="Content" Value="{StaticResource SuccessGeometry}" />
                            <Setter Property="Foreground" Value="{DynamicResource White}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Positive}" />
                            <Setter Property="Background" Value="{DynamicResource Positive}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>