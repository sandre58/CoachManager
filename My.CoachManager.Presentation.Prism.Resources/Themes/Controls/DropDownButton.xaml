<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
                    xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Converters.xaml" />
        <ResourceDictionary Source="../Base/Margins.xaml" />
        <ResourceDictionary Source="../Base/Geometry.xaml" />
        <ResourceDictionary Source="../Base/Fonts.xaml" />
        <ResourceDictionary Source="ContextMenu.xaml" />
        <ResourceDictionary Source="Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type controls:DropDownButton}">
        <Setter Property="ArrowBrush" Value="{DynamicResource ControlDarkGray}" />
        <Setter Property="ArrowMouseOverBrush" Value="{DynamicResource ControlMouseOverDarkGray}" />
        <Setter Property="ArrowPressedBrush" Value="{DynamicResource Accent}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontFamily" Value="{DynamicResource NormalFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MenuStyle" Value="{StaticResource {x:Type ContextMenu}}" />
        <Setter Property="ButtonStyle" Value="{StaticResource {x:Type Button}}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="{StaticResource DefaultHorizontalMargin}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DropDownButton}">
                    <Button x:Name="PART_Button"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                CommandTarget="{TemplateBinding CommandTarget}"
                                FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Padding="{TemplateBinding Padding}"
                                Content="{Binding Content, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{TemplateBinding ButtonStyle}">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter Content="{Binding}" />
                                    <Path Grid.Column="1" x:Name="BtnArrow"
                                          Margin="{StaticResource DefaultHorizontalMargin}"
                                          Width="12"
                                          Height="6"
                                          HorizontalAlignment="Center"
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownButton}, Path=ArrowBrush}"
                                          Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Stretch="Uniform" />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="BtnArrow" Property="Fill" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownButton}, Path=ArrowMouseOverBrush}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=IsPressed}" Value="True">
                                        <Setter TargetName="BtnArrow" Property="Fill" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(parameters:ControlParameters.PressedForeground)}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownButton}, Path=IsExpanded}" Value="True">
                                        <Setter TargetName="BtnArrow" Property="Fill" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:DropDownButton}, Path=ArrowPressedBrush}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </Button.ContentTemplate>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="PART_Menu"
                                             Placement="Bottom"
                                             MinWidth="{TemplateBinding ActualWidth}"
                                             Style="{TemplateBinding MenuStyle}"
                                             DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                             IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                             ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                             ItemStringFormat="{TemplateBinding ItemStringFormat}"
                                             ItemTemplate="{TemplateBinding ItemTemplate}"
                                             ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                             ItemsSource="{TemplateBinding ItemsSource}"
                                             ItemsPanel="{TemplateBinding ItemsPanel}"
                                             StaysOpen="False" />
                        </Button.ContextMenu>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextDropDownButtonStyle" TargetType="{x:Type controls:DropDownButton}" BasedOn="{StaticResource {x:Type controls:DropDownButton}}">
        <Setter Property="ButtonStyle" Value="{StaticResource TextButtonStyle}" />
    </Style>

    <Style x:Key="HyperLinkDropDownButtonStyle" TargetType="{x:Type controls:DropDownButton}" BasedOn="{StaticResource {x:Type controls:DropDownButton}}">
        <Setter Property="ButtonStyle" Value="{StaticResource HyperLinkButtonStyle}" />
        <Setter Property="ArrowBrush" Value="{DynamicResource Accent}" />
        <Setter Property="ArrowMouseOverBrush" Value="{DynamicResource HighLight}" />
        <Setter Property="ArrowPressedBrush" Value="{DynamicResource HighLight}" />
    </Style>
</ResourceDictionary>