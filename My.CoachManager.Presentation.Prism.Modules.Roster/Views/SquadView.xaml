<UserControl x:Class="My.CoachManager.Presentation.Prism.Modules.Roster.Views.SquadView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:My.CoachManager.Presentation.Prism.Controls;assembly=My.CoachManager.Presentation.Prism.Controls"
             xmlns:models="clr-namespace:My.CoachManager.Presentation.Prism.Models;assembly=My.CoachManager.Presentation.Prism.Models"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:viewModels="clr-namespace:My.CoachManager.Presentation.Prism.Modules.Roster.ViewModels"
             xmlns:enum="clr-namespace:My.CoachManager.CrossCutting.Core.Enums;assembly=My.CoachManager.CrossCutting.Core"
             xmlns:entities="clr-namespace:My.CoachManager.CrossCutting.Core.Resources.Entities;assembly=My.CoachManager.CrossCutting.Core"
             xmlns:columns="clr-namespace:My.CoachManager.Presentation.Prism.Controls.GridViews.Columns;assembly=My.CoachManager.Presentation.Prism.Controls"
             xmlns:strings="clr-namespace:My.CoachManager.CrossCutting.Core.Resources;assembly=My.CoachManager.CrossCutting.Core"
             xmlns:parameters="clr-namespace:My.CoachManager.Presentation.Prism.Controls.Parameters;assembly=My.CoachManager.Presentation.Prism.Controls"
             xmlns:resources="clr-namespace:My.CoachManager.Presentation.Prism.Modules.Roster.Resources"
             mc:Ignorable="d"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{d:DesignInstance Type=viewModels:SquadViewModel}"
             d:DesignHeight="500" d:DesignWidth="800">

    <controls:WorkspaceView>

        <parameters:ControlParameters.InputBindings>
            <InputBindingCollection>
                <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
                <KeyBinding Key="N" Modifiers="Control" Command="{Binding AddCommand}" />
                <KeyBinding Key="N" Modifiers="Control+Shift" Command="{Binding AddExistingPlayersCommand}" />
                <KeyBinding Key="F" Modifiers="Control" Command="{Binding Filters.ShowFiltersCommand}" />
            </InputBindingCollection>
        </parameters:ControlParameters.InputBindings>

        <controls:ExtendedListView ItemsSource="{Binding Filters.Items}">
            <controls:ExtendedListView.View>
                <controls:ExtendedGridView VisibleColumns="{Binding Parameters.DisplayedColumns}">

                    <!-- Action -->
                    <columns:ActionsGridViewColumn>
                        <columns:ActionsGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <StackPanel Orientation="Horizontal">

                                    <controls:ToolbarControl x:Name="ActionsControl" Style="{StaticResource ToolbarControlForExtendedListViewItemStyle}">
                                        <Button CommandParameter="{Binding}"
                                                Command="{Binding DataContext.EditCommand,
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListView}}}"
                                                Content="{StaticResource EditPageGeometry}"
                                                ToolTip="{x:Static strings:ControlResources.Edit}" />

                                        <!-- Menu -->
                                        <controls:DropDownButton x:Name="Menu" Content="{StaticResource ToolbarGeometry}">
                                            <controls:DropDownButton.Submenu>
                                                <controls:Submenu>
                                                    <MenuItem Header="{x:Static strings:ControlResources.MovingTo}" Icon="{StaticResource MovingToGeometry}"
                                                              ItemsSource="{Binding DataContext.Roster.Squads, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListView}}}"
                                                              Visibility="{Binding DataContext.Roster.Squads.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListView}}, Converter={StaticResource IsGreaterThanToVisibilityConverter}, ConverterParameter=1}">
                                                        <MenuItem.ItemContainerStyle>
                                                            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                                                <Setter Property="Header" Value="{Binding Name}" />
                                                                <Setter Property="Command" Value="{Binding DataContext.MovePlayerInSquadCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListView}}}" />
                                                                <Setter Property="CommandParameter">
                                                                    <Setter.Value>
                                                                        <MultiBinding Converter="{StaticResource MultipleParametersConverter}">
                                                                            <MultiBinding.Bindings>
                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListViewItem}}" />
                                                                                <Binding />
                                                                            </MultiBinding.Bindings>
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Visibility">
                                                                    <Setter.Value>
                                                                        <MultiBinding Converter="{StaticResource EqualValuesToVisibilityConverter}" ConverterParameter="inverse">
                                                                            <MultiBinding.Bindings>
                                                                                <Binding Path="DataContext.SquadId" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListViewItem}}" />
                                                                                <Binding Path="Id" />
                                                                            </MultiBinding.Bindings>
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </MenuItem.ItemContainerStyle>
                                                    </MenuItem>
                                                    <MenuItem Header="{x:Static strings:ControlResources.Remove}" Icon="{StaticResource TrashGeometry}"
                                                          Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedListView}}}"
                                                          CommandParameter="{Binding}"
                                                          parameters:ControlParameters.FocusBackground="{DynamicResource Negative}" />
                                                </controls:Submenu>
                                            </controls:DropDownButton.Submenu>
                                        </controls:DropDownButton>
                                    </controls:ToolbarControl>
                                </StackPanel>
                            </DataTemplate>
                        </columns:ActionsGridViewColumn.CellTemplate>
                    </columns:ActionsGridViewColumn>

                    <!-- Number -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.NumberAbbr}"
                                                     PropertyName="Number" Width="80">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <TextBlock Text="{Binding Number}" FontSize="{StaticResource HeaderFontSize}" FontFamily="{StaticResource NumberFontFamily}" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Photo -->
                    <columns:ExtendedGridViewColumn
                            PropertyName="Photo"  CanUserHideColumn="False" Width="100">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <controls:ImageContent Style="{StaticResource RoundedImageStyle}" Width="45" Height="45" Image="{Binding Photo, Converter={StaticResource BytesToImageConverter}}" HorizontalAlignment="Center">
                                    <Grid>
                                        <controls:Icon x:Name="Icon" Content="{StaticResource MalePeopleGeometry}" Size="Custom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                    </Grid>
                                </controls:ImageContent>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Gender}" Value="{x:Static enum:GenderType.Female}">
                                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource FemalePeopleGeometry}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Name -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.LastName}"
                                                         PropertyName="LastName" CanUserHideColumn="False" Width="150">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <StackPanel>
                                    <TextBlock Text="{Binding LastName, Converter={StaticResource ToUpperConverter}}" FontWeight="Bold" />
                                    <TextBlock Text="{Binding FirstName}" FontWeight="Bold" />
                                </StackPanel>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Age -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Age}"
                                                         PropertyName="Age" Width="80">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Age, StringFormat={x:Static entities:PersonResources.AgeFormat}, TargetNullValue=''}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Birthdate -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Birthdate}"
                                                         PropertyName="Birthdate" Width="120"
                                                         DisplayMemberBinding="{Binding Birthdate, StringFormat={}{0:dd/MM/yyyy}}" />

                    <!-- Category -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.CategoryAbbr}"
                                                         PropertyName="Category" Width="90"
                                                         DisplayMemberBinding="{Binding Category.Label}" />

                    <!-- Position -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.Position}"
                                                     PropertyName="Position" Width="200">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <StackPanel Orientation="Horizontal">
                                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <controls:PositionsSelector ItemsSource="{Binding Positions}"
                                                                    Margin="{StaticResource DefaultMargin}"
                                                                    ItemHeight="7" Height="64" Width="48" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                    ItemContainerStyle="{StaticResource PlayerPositionStyle}" />
                                    </Grid>
                                    <TextBlock Text="{Binding NaturalPositions}" />
                                </StackPanel>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- License Number -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.LicenseNumber}"
                                                         PropertyName="LicenseNumber" Width="130"
                                                         DisplayMemberBinding="{Binding LicenseNumber, Converter={StaticResource ToFormatConverter}, ConverterParameter=\{0:# ### ### ###\}}" />

                    <!-- License state -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.LicenseState}"
                                                     PropertyName="LicenseState" Width="180">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <controls:ExtendedProgressBar x:Name="value" Height="15" Width="100" HorizontalAlignment="Center"
                                                                  Margin="{StaticResource DefaultHorizontalMargin}"
                                                                  Minimum="0" Maximum="{Binding Source={x:Static enum:LicenseState.Paid}, Converter={StaticResource EnumToIntegerConverter}}"
                                                                  Value="{Binding LicenseState, Converter={StaticResource EnumToIntegerConverter}}"
                                                                  ToolTip="{Binding LicenseState, Converter={StaticResource EnumToStringConverter}}" />
                                    <controls:Icon HorizontalAlignment="Center"
                                                   Size="Custom" Height="25" Width="25" Foreground="{DynamicResource Warning}" Margin="{StaticResource DefaultHorizontalMargin}" Content="{DynamicResource WarningGeometry}"
                                                   Visibility="{Binding IsMutation, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   ToolTip="{x:Static entities:PlayerResources.IsMutation}" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enum:LicenseState.Paid}">
                                        <Setter TargetName="value" Property="Foreground" Value="{DynamicResource Great}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enum:LicenseState.Back}">
                                        <Setter TargetName="value" Property="Foreground" Value="{DynamicResource Average}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enum:LicenseState.Given}">
                                        <Setter TargetName="value" Property="Foreground" Value="{DynamicResource Poor}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LicenseState}" Value="{x:Static enum:LicenseState.Unknown}">
                                        <Setter TargetName="value" Property="Foreground" Value="{DynamicResource None}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- FromDate -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.FromDate}"
                                                     PropertyName="FromDate" Width="110"
                                                     DisplayMemberBinding="{Binding FromDate, StringFormat={}{0:dd/MM/yyyy}}" />

                    <!-- Gender -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Gender}"
                                                         PropertyName="Gender" Width="80">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <controls:Icon Size="Custom" Height="25" Foreground="{DynamicResource Male}"  Content="{DynamicResource GenderMaleGeometry}"
                                               Visibility="{Binding Gender, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static enum:GenderType.Male}}" />
                                    <controls:Icon Size="Custom" Height="25" Foreground="{DynamicResource Female}"  Content="{DynamicResource GenderFemaleGeometry}"
                                               Visibility="{Binding Gender, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static enum:GenderType.Female}}" />
                                </Grid>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Country -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.CountryAbbr}"
                                                         PropertyName="Country" Width="70">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <Grid>
                                    <Image Source="{Binding Country.FullPath}" Width="20" ToolTip="{Binding Country.Label}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Address -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Address}"
                                                         PropertyName="Address" Width="210">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <StackPanel>
                                    <TextBlock Text="{Binding Address}" />
                                    <StackPanel Orientation="Horizontal" Margin="{StaticResource DefaultHorizontalMargin}">
                                        <TextBlock Text="{Binding  PostalCode, StringFormat='{}{0} '}" Margin="0" />
                                        <TextBlock Text="{Binding  City, Converter={StaticResource ToUpperConverter}}" Margin="0" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Phone -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Phone}"
                                                         PropertyName="Phone" Width="130">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <controls:HyperlinkButton Content="{Binding Phone, Converter={StaticResource ToFormatConverter}, ConverterParameter=\{0:00 00 00 00 00\}}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Email -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Email}"
                                                         PropertyName="Email" Width="175">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <controls:HyperlinkButton Content="{Binding Email}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Laterality -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.Laterality}"
                                                         PropertyName="Laterality" Width="90">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding Laterality, Converter={StaticResource EnumToStringConverter}}">
                                    <controls:Icon x:Name="LeftFootIcon" Size="Custom" Height="35"  Content="{DynamicResource LeftFootGeometry}" Margin="{StaticResource DefaultHorizontalMargin}" Opacity="0.3" />
                                    <controls:Icon x:Name="RightFootIcon" Size="Custom" Height="35" Content="{DynamicResource RightFootGeometry}" Margin="{StaticResource DefaultHorizontalMargin}" Opacity="0.3" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Laterality}" Value="{x:Static enum:Laterality.LeftHander}">
                                        <Setter TargetName="LeftFootIcon" Property="Opacity" Value="1" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Laterality}" Value="{x:Static enum:Laterality.RightHander}">
                                        <Setter TargetName="RightFootIcon" Property="Opacity" Value="1" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Height -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.Height}"
                                                         PropertyName="Height" Width="90">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Height, Converter={StaticResource ToFormatConverter}, ConverterParameter={x:Static entities:PlayerResources.HeightFormat}}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Weight -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.Weight}"
                                                         PropertyName="Weight" Width="90">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Weight, Converter={StaticResource ToFormatConverter}, ConverterParameter={x:Static entities:PlayerResources.WeightFormat}}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Size -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PersonResources.Size}"
                                                         PropertyName="Size" Width="90">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding Size}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>

                    <!-- Shoes Size -->
                    <columns:ExtendedGridViewColumn Header="{x:Static entities:PlayerResources.ShoesSize}"
                                                         PropertyName="ShoesSize" Width="90">
                        <columns:ExtendedGridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:RosterPlayerModel">
                                <TextBlock HorizontalAlignment="Center" Text="{Binding ShoesSize}" />
                            </DataTemplate>
                        </columns:ExtendedGridViewColumn.CellTemplate>
                    </columns:ExtendedGridViewColumn>
                </controls:ExtendedGridView>
            </controls:ExtendedListView.View>
        </controls:ExtendedListView>

        <controls:WorkspaceView.Commands>
            <controls:DropDownCommandButton DockPanel.Dock="Right" Style="{StaticResource AddDropDownCommandButtonApplicationBarStyle}">
                <controls:DropDownCommandButton.Submenu>
                    <controls:Submenu>
                        <MenuItem Header="{x:Static resources:SquadResources.ExistingPlayers}" Icon="{StaticResource AddPeopleSeveralGeometry}" Command="{Binding AddExistingPlayersCommand}" InputGestureText="Ctrl+Maj+N" />
                        <MenuItem Header="{x:Static resources:SquadResources.NewPlayer}" Icon="{StaticResource AddPeopleGeometry}" Command="{Binding AddCommand}" InputGestureText="Ctrl+N" />
                    </controls:Submenu>
                </controls:DropDownCommandButton.Submenu>
            </controls:DropDownCommandButton>
            <controls:CommandButton DockPanel.Dock="Right" Style="{StaticResource RefreshCommandButtonApplicationBarStyle}" Command="{Binding RefreshCommand}" />
            <Separator DockPanel.Dock="Right" Style="{StaticResource VerticalSeparatorStyle}" />
            <controls:CommandButton DockPanel.Dock="Right" Style="{StaticResource EditCommandButtonApplicationBarStyle}" Command="{Binding EditSelectedItemCommand}" />
            <controls:CommandButton DockPanel.Dock="Right" Style="{StaticResource DeleteCommandButtonApplicationBarStyle}" Command="{Binding RemoveSelectedItemsCommand}" />
            <controls:DropDownCommandButton DockPanel.Dock="Right" Style="{StaticResource MovingToDropDownCommandButtonApplicationBarStyle}" IsEnabled="{Binding CanMoveToSquadSelectedItems}">
                <controls:DropDownCommandButton.Submenu>
                    <controls:Submenu ItemsSource="{Binding SquadsOfSelectedItemsToMoving}">
                        <controls:Submenu.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}">
                                <Setter Property="Header" Value="{Binding Name}" />
                                <Setter Property="Command" Value="{Binding DataContext.MoveSelectedPlayersInSquadCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WorkspaceView}}}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </controls:Submenu.ItemContainerStyle>
                    </controls:Submenu>
                </controls:DropDownCommandButton.Submenu>
            </controls:DropDownCommandButton>
        </controls:WorkspaceView.Commands>
    </controls:WorkspaceView>
</UserControl>